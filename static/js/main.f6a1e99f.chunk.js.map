{"version":3,"sources":["contracts/factories/KaoDao__factory.ts","contracts/factories/KaoMoji__factory.ts","contracts/factories/KaoToken__factory.ts","contracts/factories/AuctionHouse__factory.ts","core/networks.ts","hooks/useAddresses.ts","hooks/useContracts.ts","hooks/useSigner.ts","layout/parts/balance.tsx","components/button/index.tsx","layout/parts/connect.tsx","layout/index.tsx","components/container/index.tsx","components/kaomoji/index.tsx","hooks/useKaoMoji.ts","hooks/useKaoMojis.ts","components/logo/index.tsx","pages/home.tsx","hooks/useBlockNumber.ts","hooks/useProvider.ts","pages/proposals/parts/item/index.tsx","components/input/index.tsx","pages/proposals/parts/propose/index.tsx","pages/proposals/index.tsx","hooks/useProposals.ts","pages/auctions/index.tsx","hooks/useAuctions.ts","components/select/index.tsx","pages/buy/index.tsx","pages/gallery/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","_bytecode","KaoDao__factory","signer","_token","overrides","address","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","KaoMoji__factory","components","KaoToken__factory","Networks","AuctionHouse__factory","_weth","SUPPORTED_NETWORKS","ROPSTEN","LOCAL","useAddresses","chainId","useWeb3React","network","addresses","toLowerCase","useContracts","connector","library","active","useState","contracts","setContracts","getKaoDao","useMemo","a","getAccount","account","getSigner","connectUnchecked","dao","connect","KaoDao","moji","KaoMoji","token","KaoToken","auction","AuctionHouse","useEffect","useSigner","setSigner","Balance","balance","setBalance","getBalance","getAddress","balanceOf","kaoBalance","ethBalance","kao","eth","on","off","format","value","parts","formatFixed","split","substr","className","Button","props","clicking","setClicking","onClick","disabled","result","then","style","lineHeight","children","injected","InjectedConnector","supportedChainIds","Connect","activate","deactivate","disconnect","formattedAccount","length","display","padding","margin","Layout","to","justifyContent","Container","KaoMojiFrame","data","flexDirection","backgroundColor","textAlign","marginBottom","boxShadow","KaoMojiCard","item","id","owner","kaoMoji","setKaoMoji","getData","useCallback","ownerOf","owned","getDataOf","bytesToData","ethers","toUtf8String","useEnhanceKaoMoji","width","height","toString","useKaoMojis","ownedOnly","kaomojis","setKaomojis","filter","filters","Transfer","undefined","constants","AddressZero","queryFilter","tokens","sort","b","blockNumber","reduce","items","x","args","index","findIndex","tokenId","push","Logo","fontWeight","fontSize","HomePage","kaoMojis","map","useBlockNumber","provider","setProvider","getProvider","useProvider","currentBlockNumber","setCurrentBlockNumber","updateBlockNumber","block","getBlockNumber","latestBlock","ProposalState","VoteType","ProposalItem","proposal","voted","setVoted","proposalState","setProposalState","votes","setVotes","vote","support","castVote","proposalId","castTx","wait","console","error","message","hasVoted","state","proposalVotes","againstVotes","forVotes","abstainVotes","execute","descriptionHash","keccak256","toUtf8Bytes","description","targets","calldatas","executionTx","getProposalVotes","substring","startBlock","gt","sub","Active","endBlock","lt","ProposalStateComponent","For","Against","Abstain","Defeated","Succeeded","Queued","Executed","formatUnits","Input","setValue","debounce","useDebounce","newValue","onChange","readOnly","readonly","e","target","placeholder","func","waitFor","timer","useRef","savedFunc","current","clearTimeout","setTimeout","Propose","proposalData","setProposalData","selfDelegate","Error","delegate","proposeKao","callData","interface","encodeFunctionData","propose","tx","ProposalsPage","proposals","setProposals","ProposalCreated","proposalsResult","toNumber","subscribeToProposalCreated","useProposals","maxWidth","minWidth","Auctions","auctions","setAuctions","getAuctions","AuctionCreated","auctionsResult","BigNumber","from","firstBidTime","useAuctions","AuctionItem","auctionId","setAuction","bidAmount","setBidAmount","allowance","setAllowance","kaomoji","setKaomoji","nowTimeStamp","Math","round","Date","now","endOfAuction","eq","add","duration","started","ended","getAuction","auctionData","tokenData","amount","bidder","isSelf","getAllowance","placeBid","createBid","increaseAllowance","claim","endAuction","div","reservePrice","parseUnits","gte","marginTop","Select","renderValue","renderSelectItem","open","setOpen","BuyKaoPage","paraSwap","Object","values","includes","ParaSwap","sourceOperation","setSourceOperation","destinationOperation","setDestinationOperation","sourceAmount","setSourceAmount","destinationAmount","setDestinationAmount","operation","setOperation","tokenList","setTokenList","swap","optimalRate","srcToken","destToken","srcAmount","destAmount","senderAddress","receiver","buildTx","txParams","sendTransaction","gasPrice","gasLimit","gas","loadTokenList","getTokens","Array","isArray","decimals","symbol","tokenType","connectors","mainConnector","img","icon","kaoToken","calculateRate","getRate","SwapSide","SELL","partner","includeDEXS","priceRoute","contractMethod","TokenItem","label","tokenSelected","selected","amountChanged","marginLeft","src","alt","toUpperCase","GalleryPage","getLibrary","providers","Web3Provider","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,QACdC,KAAM,uBACNC,KAAM,SAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,kBACNC,KAAM,YAGVD,KAAM,iBACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,WACNC,KAAM,YAGVD,KAAM,0BACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,kBACNC,KAAM,YAGVD,KAAM,eACNC,KAAM,SAER,CACEE,WAAW,EACXL,OAAQ,CACN,CACEM,SAAS,EACTL,aAAc,UACdC,KAAM,YACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEG,SAAS,EACTL,aAAc,UACdC,KAAM,eACNC,KAAM,YAGVD,KAAM,6BACNC,KAAM,SAER,CACEC,gBAAiB,UACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,GACNC,KAAM,YAGVD,KAAM,WACNK,QAAS,CACP,CACEN,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEF,aAAc,OACdC,KAAM,WACNC,KAAM,QAER,CACEF,aAAc,UACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,uBACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,aACNC,KAAM,WAER,CACEF,aAAc,kBACdC,KAAM,SACNC,KAAM,WAER,CACEF,aAAc,kBACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,kBACNC,KAAM,YAGVC,gBAAiB,OACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,YACNC,KAAM,YAGVD,KAAM,gBACNK,QAAS,GACTH,gBAAiB,aACjBD,KAAM,YAER,CACEH,OAAQ,CACN,CACEC,aAAc,UACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,gBACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,WACNC,KAAM,WAER,CACEF,aAAc,UACdC,KAAM,eACNC,KAAM,WAER,CACEF,aAAc,kBACdC,KAAM,UACNC,KAAM,WAER,CACEF,aAAc,QACdC,KAAM,uBACNC,KAAM,SAER,CACEF,aAAc,UACdC,KAAM,kBACNC,KAAM,Y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","file":"static/js/main.f6a1e99f.chunk.js","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { KaoDao, KaoDaoInterface } from \"../KaoDao\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"contract ERC20Votes\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"proposer\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"string[]\",\n        name: \"signatures\",\n        type: \"string[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"startBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"endBlock\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"ProposalCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ProposalExecuted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"oldQuorumNumerator\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newQuorumNumerator\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"QuorumNumeratorUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"voter\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"weight\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"VoteCast\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"ADDRESS_UPDATER\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"BALLOT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"COUNTING_MODE\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n    ],\n    name: \"castVote\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"castVoteBySig\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"support\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"string\",\n        name: \"reason\",\n        type: \"string\",\n      },\n    ],\n    name: \"castVoteWithReason\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"execute\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasVoted\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"descriptionHash\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"hashProposal\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalDeadline\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalSnapshot\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"proposalVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"againstVotes\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"forVotes\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"abstainVotes\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address[]\",\n        name: \"targets\",\n        type: \"address[]\",\n      },\n      {\n        internalType: \"uint256[]\",\n        name: \"values\",\n        type: \"uint256[]\",\n      },\n      {\n        internalType: \"bytes[]\",\n        name: \"calldatas\",\n        type: \"bytes[]\",\n      },\n      {\n        internalType: \"string\",\n        name: \"description\",\n        type: \"string\",\n      },\n    ],\n    name: \"propose\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"quorum\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"quorumDenominator\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"quorumNumerator\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"kaoMoji\",\n        type: \"address\",\n      },\n    ],\n    name: \"setKaoMojiAddress\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"proposalId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"state\",\n    outputs: [\n      {\n        internalType: \"enum IGovernor.ProposalState\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"token\",\n    outputs: [\n      {\n        internalType: \"contract ERC20Votes\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"newQuorumNumerator\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"updateQuorumNumerator\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingDelay\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"votingPeriod\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"pure\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6101406040523480156200001257600080fd5b50604051620057a0380380620057a0833981810160405281019062000038919062000503565b6005816040518060400160405280600681526020017f4b616f44616f000000000000000000000000000000000000000000000000000081525080620000826200019d60201b60201c565b60008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260c081815250508160e081815250504660a08181525050620000ea818484620001da60201b60201c565b6080818152505080610100818152505050505050508060009080519060200190620001179291906200043c565b50508073ffffffffffffffffffffffffffffffffffffffff166101208173ffffffffffffffffffffffffffffffffffffffff1660601b815250505062000163816200021660201b60201c565b50620001967ff0e519adfa92b08162a7a5fb116ac5cc83e9e7105e2ec4ca98c50726b178375c33620002b860201b60201c565b5062000796565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b60008383834630604051602001620001f795949392919062000589565b6040516020818303038152906040528051906020012090509392505050565b62000226620002ce60201b60201c565b8111156200026b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026290620005e6565b60405180910390fd5b60006003549050816003819055507f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b46339978183604051620002ac92919062000608565b60405180910390a15050565b620002ca8282620002d760201b60201c565b5050565b60006064905090565b620002e98282620003c960201b60201c565b620003c55760016004600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200036a6200043460201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60006004600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b8280546200044a90620006a2565b90600052602060002090601f0160209004810192826200046e5760008555620004ba565b82601f106200048957805160ff1916838001178555620004ba565b82800160010185558215620004ba579182015b82811115620004b95782518255916020019190600101906200049c565b5b509050620004c99190620004cd565b5090565b5b80821115620004e8576000816000905550600101620004ce565b5090565b600081519050620004fd816200077c565b92915050565b6000602082840312156200051657600080fd5b60006200052684828501620004ec565b91505092915050565b6200053a8162000646565b82525050565b6200054b816200065a565b82525050565b60006200056060438362000635565b91506200056d8262000707565b606082019050919050565b620005838162000698565b82525050565b600060a082019050620005a0600083018862000540565b620005af602083018762000540565b620005be604083018662000540565b620005cd606083018562000578565b620005dc60808301846200052f565b9695505050505050565b60006020820190508181036000830152620006018162000551565b9050919050565b60006040820190506200061f600083018562000578565b6200062e602083018462000578565b9392505050565b600082825260208201905092915050565b6000620006538262000678565b9050919050565b6000819050919050565b6000620006718262000646565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006002820490506001821680620006bb57607f821691505b60208210811415620006d257620006d1620006d8565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60008201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e6160208201527f746f720000000000000000000000000000000000000000000000000000000000604082015250565b620007878162000664565b81146200079357600080fd5b50565b60805160a05160c05160e051610100516101205160601c614fa9620007f76000396000818161149c01528181611f330152611ff8015260006124ec0152600061252e0152600061250d01526000612499015260006124c10152614fa96000f3fe6080604052600436106101e35760003560e01c80637b3c71d311610102578063c01f9e3711610095578063deaaa7cc11610064578063deaaa7cc14610783578063eb9019d4146107ae578063f8ce560a146107eb578063fc0c546a14610828576101e3565b8063c01f9e37146106b5578063c59057e4146106f2578063d547741f1461072f578063dd4e2ba514610758576101e3565b806397c3d334116100d157806397c3d3341461060b578063a217fddf14610636578063a44bda5f14610661578063a7713a701461068a576101e3565b80637b3c71d3146105295780637d5e81e21461056657806387863245146105a357806391d14854146105ce576101e3565b806336568abe1161017a57806343859632116101495780634385963214610445578063544ffc9c1461048257806354fd4d50146104c157806356781388146104ec576101e3565b806336568abe146103775780633932abb1146103a05780633bccf4fd146103cb5780633e4f49e614610408576101e3565b8063248a9ca3116101b6578063248a9ca3146102a45780632656227d146102e15780632d63f693146103115780632f2ff15d1461034e576101e3565b806301ffc9a7146101e857806302a251a31461022557806306f3f9e61461025057806306fdde0314610279575b600080fd5b3480156101f457600080fd5b5061020f600480360381019061020a919061336b565b610853565b60405161021c9190613d29565b60405180910390f35b34801561023157600080fd5b5061023a610865565b6040516102479190614106565b60405180910390f35b34801561025c57600080fd5b5061027760048036038101906102729190613394565b61086e565b005b34801561028557600080fd5b5061028e6108f6565b60405161029b9190613e64565b60405180910390f35b3480156102b057600080fd5b506102cb60048036038101906102c69190613306565b610988565b6040516102d89190613d44565b60405180910390f35b6102fb60048036038101906102f69190613198565b6109a8565b6040516103089190614106565b60405180910390f35b34801561031d57600080fd5b5061033860048036038101906103339190613394565b610b73565b6040516103459190614106565b60405180910390f35b34801561035a57600080fd5b506103756004803603810190610370919061332f565b610be1565b005b34801561038357600080fd5b5061039e6004803603810190610399919061332f565b610c0a565b005b3480156103ac57600080fd5b506103b5610c8d565b6040516103c29190614106565b60405180910390f35b3480156103d757600080fd5b506103f260048036038101906103ed91906134ca565b610c97565b6040516103ff9190614106565b60405180910390f35b34801561041457600080fd5b5061042f600480360381019061042a9190613394565b610d21565b60405161043c9190613e49565b60405180910390f35b34801561045157600080fd5b5061046c600480360381019061046791906133e6565b610ee8565b6040516104799190613d29565b60405180910390f35b34801561048e57600080fd5b506104a960048036038101906104a49190613394565b610f53565b6040516104b8939291906141fa565b60405180910390f35b3480156104cd57600080fd5b506104d6610f8b565b6040516104e39190613e64565b60405180910390f35b3480156104f857600080fd5b50610513600480360381019061050e9190613422565b610fc8565b6040516105209190614106565b60405180910390f35b34801561053557600080fd5b50610550600480360381019061054b919061345e565b610ff9565b60405161055d9190614106565b60405180910390f35b34801561057257600080fd5b5061058d60048036038101906105889190613243565b611061565b60405161059a9190614106565b60405180910390f35b3480156105af57600080fd5b506105b8611220565b6040516105c59190613d44565b60405180910390f35b3480156105da57600080fd5b506105f560048036038101906105f0919061332f565b611244565b6040516106029190613d29565b60405180910390f35b34801561061757600080fd5b506106206112af565b60405161062d9190614106565b60405180910390f35b34801561064257600080fd5b5061064b6112b8565b6040516106589190613d44565b60405180910390f35b34801561066d57600080fd5b5061068860048036038101906106839190613133565b6112bf565b005b34801561069657600080fd5b5061069f611336565b6040516106ac9190614106565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d79190613394565b611340565b6040516106e99190614106565b60405180910390f35b3480156106fe57600080fd5b5061071960048036038101906107149190613198565b6113ae565b6040516107269190614106565b60405180910390f35b34801561073b57600080fd5b506107566004803603810190610751919061332f565b6113ea565b005b34801561076457600080fd5b5061076d611413565b60405161077a9190613e64565b60405180910390f35b34801561078f57600080fd5b50610798611450565b6040516107a59190613d44565b60405180910390f35b3480156107ba57600080fd5b506107d560048036038101906107d0919061315c565b611474565b6040516107e29190614106565b60405180910390f35b3480156107f757600080fd5b50610812600480360381019061080d9190613394565b611488565b60405161081f9190614106565b60405180910390f35b34801561083457600080fd5b5061083d61149a565b60405161084a9190613e2e565b60405180910390f35b600061085e826114be565b9050919050565b60006050905090565b610876611538565b73ffffffffffffffffffffffffffffffffffffffff16610894611540565b73ffffffffffffffffffffffffffffffffffffffff16146108ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e190613ea6565b60405180910390fd5b6108f381611548565b50565b60606000805461090590614750565b80601f016020809104026020016040519081016040528092919081815260200182805461093190614750565b801561097e5780601f106109535761010080835404028352916020019161097e565b820191906000526020600020905b81548152906001019060200180831161096157829003601f168201915b5050505050905090565b600060046000838152602001908152602001600020600101549050919050565b6000806109b7868686866113ae565b905060006109c482610d21565b905060046007811115610a00577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816007811115610a39577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1480610ab5575060056007811115610a7a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816007811115610ab3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b145b610af4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aeb90614046565b60405180910390fd5b600180600084815260200190815260200160002060020160006101000a81548160ff0219169083151502179055507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f82604051610b519190614106565b60405180910390a1610b6682888888886115dd565b8192505050949350505050565b6000610bd0600160008481526020019081526020016000206000016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505061175e565b67ffffffffffffffff169050919050565b610bea82610988565b610bfb81610bf6611540565b61176c565b610c058383611809565b505050565b610c12611540565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c76906140e6565b60405180910390fd5b610c8982826118ea565b5050565b6000610111905090565b600080610cf8610cf07f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f8989604051602001610cd593929190613db2565b604051602081830303815290604052805190602001206119cc565b8686866119e6565b9050610d1587828860405180602001604052806000815250611a11565b91505095945050505050565b60008060016000848152602001908152602001600020604051806080016040529081600082016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815250508152602001600182016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900460ff1615151515815250509050806040015115610e1a576007915050610ee3565b806060015115610e2e576002915050610ee3565b610e3b8160000151611bb1565b15610e4a576000915050610ee3565b610e578160200151611bb1565b15610e66576001915050610ee3565b610e738160200151611bcb565b15610ea857610e8183611bf7565b8015610e925750610e9183611c3e565b5b610e9d576003610ea0565b60045b915050610ee3565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eda90614066565b60405180910390fd5b919050565b60006002600084815260200190815260200160002060030160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080600080600260008681526020019081526020016000209050806000015481600101548260020154935093509350509193909250565b60606040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250905090565b600080610fd3611540565b9050610ff084828560405180602001604052806000815250611a11565b91505092915050565b600080611004611540565b905061105686828787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611a11565b915050949350505050565b600060018551146110a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109e90613fc6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611139576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113090613f06565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16856000815181106111ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161461120a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611201906140c6565b60405180910390fd5b61121685858585611c69565b9050949350505050565b7ff0e519adfa92b08162a7a5fb116ac5cc83e9e7105e2ec4ca98c50726b178375c81565b60006004600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006064905090565b6000801b81565b7ff0e519adfa92b08162a7a5fb116ac5cc83e9e7105e2ec4ca98c50726b178375c6112f1816112ec611540565b61176c565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000600354905090565b600061139d600160008481526020019081526020016000206001016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505061175e565b67ffffffffffffffff169050919050565b6000848484846040516020016113c79493929190613ccf565b6040516020818303038152906040528051906020012060001c9050949350505050565b6113f382610988565b611404816113ff611540565b61176c565b61140e83836118ea565b505050565b60606040518060400160405280602081526020017f737570706f72743d627261766f2671756f72756d3d666f722c6162737461696e815250905090565b7f150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f81565b60006114808383611f2f565b905092915050565b600061149382611fe4565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806115315750611530826120ba565b5b9050919050565b600030905090565b600033905090565b6115506112af565b811115611592576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158990613ee6565b60405180910390fd5b60006003549050816003819055507f0553476bf02ef2726e8ce5ced78d63e26e602e4a2257b1f559418e24b463399781836040516115d19291906141d1565b60405180910390a15050565b6000604051806060016040528060278152602001614f4d60279139905060005b855181101561175557600080878381518110611642577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16878481518110611699577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101518785815181106116da577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101516040516116ef9190613c1e565b60006040518083038185875af1925050503d806000811461172c576040519150601f19603f3d011682016040523d82523d6000602084013e611731565b606091505b5091509150611741828286612134565b5050508061174e906147b3565b90506115fd565b50505050505050565b600081600001519050919050565b6117768282611244565b6118055761179b8173ffffffffffffffffffffffffffffffffffffffff16601461219b565b6117a98360001c602061219b565b6040516020016117ba929190613c6c565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117fc9190613e64565b60405180910390fd5b5050565b6118138282611244565b6118e65760016004600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061188b611540565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6118f48282611244565b156119c85760006004600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061196d611540565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60006119df6119d9612495565b83612558565b9050919050565b60008060006119f78787878761258b565b91509150611a0481612698565b8192505050949350505050565b60008060016000878152602001908152602001600020905060016007811115611a63577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611a6c87610d21565b6007811115611aa4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14611ae4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611adb90613fa6565b60405180910390fd5b6000611b4286611b33846000016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff168152505061175e565b67ffffffffffffffff16611474565b9050611b50878787846129e9565b8573ffffffffffffffffffffffffffffffffffffffff167fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda488878488604051611b9c9493929190614231565b60405180910390a28092505050949350505050565b600043826000015167ffffffffffffffff16119050919050565b6000611bd682612c61565b8015611bf0575043826000015167ffffffffffffffff1611155b9050919050565b60008060026000848152602001908152602001600020905080600201548160010154611c2391906144cb565b611c34611c2f85610b73565b611488565b1115915050919050565b6000806002600084815260200190815260200160002090508060000154816001015411915050919050565b600080611c7f86868686805190602001206113ae565b90508451865114611cc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cbc90613f46565b60405180910390fd5b8351865114611d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0090613f46565b60405180910390fd5b6000865111611d4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4490613fe6565b60405180910390fd5b6000600160008381526020019081526020016000209050611dad816000016040518060200160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681525050612c7b565b611dec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de3906140a6565b60405180910390fd5b6000611dfe611df9610c8d565b612c95565b611e0743612c95565b611e119190614521565b90506000611e25611e20610865565b612c95565b82611e309190614521565b9050611e488284600001612cec90919063ffffffff16565b611e5e8184600101612cec90919063ffffffff16565b7f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e084611e88611540565b8b8b8d5167ffffffffffffffff811115611ecb577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051908082528060200260200182016040528015611efe57816020015b6060815260200190600190039081611ee95790505b508c88888e604051611f1899989796959493929190614121565b60405180910390a183945050505050949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633a46b1a884846040518363ffffffff1660e01b8152600401611f8c929190613ca6565b60206040518083038186803b158015611fa457600080fd5b505afa158015611fb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fdc91906133bd565b905092915050565b6000611fee6112af565b611ff6611336565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638e539e8c856040518263ffffffff1660e01b815260040161204f9190614106565b60206040518083038186803b15801561206757600080fd5b505afa15801561207b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061209f91906133bd565b6120a99190614590565b6120b3919061455f565b9050919050565b60007fbf26d897000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061212d575061212c82612d1b565b5b9050919050565b6060831561214457829050612194565b6000835111156121575782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161218b9190613e64565b60405180910390fd5b9392505050565b6060600060028360026121ae9190614590565b6121b891906144cb565b67ffffffffffffffff8111156121f7577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156122295781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612287577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612311577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026123519190614590565b61235b91906144cb565b90505b6001811115612447577f3031323334353637383961626364656600000000000000000000000000000000600f8616601081106123c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110612400577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061244090614726565b905061235e565b506000841461248b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161248290613ec6565b60405180910390fd5b8091505092915050565b60007f00000000000000000000000000000000000000000000000000000000000000004614156124e7577f00000000000000000000000000000000000000000000000000000000000000009050612555565b6125527f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612d85565b90505b90565b6000828260405160200161256d929190613c35565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156125c657600060039150915061268f565b601b8560ff16141580156125de5750601c8560ff1614155b156125f057600060049150915061268f565b6000600187878787604051600081526020016040526040516126159493929190613de9565b6020604051602081039080840390855afa158015612637573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156126865760006001925092505061268f565b80600092509250505b94509492505050565b600060048111156126d2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600481111561270b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612716576129e6565b60016004811115612750577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115612789577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156127ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127c190613e86565b60405180910390fd5b60026004811115612804577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81600481111561283d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561287e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161287590613f26565b60405180910390fd5b600360048111156128b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156128f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415612932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161292990613f66565b60405180910390fd5b60048081111561296b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156129a4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156129e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129dc90614006565b60405180910390fd5b5b50565b60006002600086815260200190815260200160002090508060030160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615612a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a8690613f86565b60405180910390fd5b60018160030160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006002811115612b23577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff168360ff161415612b505781816000016000828254612b4491906144cb565b92505081905550612c5a565b60016002811115612b8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff168360ff161415612bb75781816001016000828254612bab91906144cb565b92505081905550612c59565b600280811115612bf0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60ff168360ff161415612c1d5781816002016000828254612c1191906144cb565b92505081905550612c58565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c4f90614086565b60405180910390fd5b5b5b5050505050565b600080826000015167ffffffffffffffff16119050919050565b600080826000015167ffffffffffffffff16149050919050565b600067ffffffffffffffff8016821115612ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cdb90614026565b60405180910390fd5b819050919050565b808260000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008383834630604051602001612da0959493929190613d5f565b6040516020818303038152906040528051906020012090509392505050565b6000612dd2612dcd846142a2565b61427d565b90508083825260208201905082856020860282011115612df157600080fd5b60005b85811015612e215781612e078882612f99565b845260208401935060208301925050600181019050612df4565b5050509392505050565b6000612e3e612e39846142ce565b61427d565b90508083825260208201905082856020860282011115612e5d57600080fd5b60005b85811015612ea757813567ffffffffffffffff811115612e7f57600080fd5b808601612e8c8982613056565b85526020850194506020840193505050600181019050612e60565b5050509392505050565b6000612ec4612ebf846142fa565b61427d565b90508083825260208201905082856020860282011115612ee357600080fd5b60005b85811015612f135781612ef988826130f4565b845260208401935060208301925050600181019050612ee6565b5050509392505050565b6000612f30612f2b84614326565b61427d565b905082815260208101848484011115612f4857600080fd5b612f538482856146e4565b509392505050565b6000612f6e612f6984614357565b61427d565b905082815260208101848484011115612f8657600080fd5b612f918482856146e4565b509392505050565b600081359050612fa881614ed9565b92915050565b600082601f830112612fbf57600080fd5b8135612fcf848260208601612dbf565b91505092915050565b600082601f830112612fe957600080fd5b8135612ff9848260208601612e2b565b91505092915050565b600082601f83011261301357600080fd5b8135613023848260208601612eb1565b91505092915050565b60008135905061303b81614ef0565b92915050565b60008135905061305081614f07565b92915050565b600082601f83011261306757600080fd5b8135613077848260208601612f1d565b91505092915050565b60008083601f84011261309257600080fd5b8235905067ffffffffffffffff8111156130ab57600080fd5b6020830191508360018202830111156130c357600080fd5b9250929050565b600082601f8301126130db57600080fd5b81356130eb848260208601612f5b565b91505092915050565b60008135905061310381614f1e565b92915050565b60008151905061311881614f1e565b92915050565b60008135905061312d81614f35565b92915050565b60006020828403121561314557600080fd5b600061315384828501612f99565b91505092915050565b6000806040838503121561316f57600080fd5b600061317d85828601612f99565b925050602061318e858286016130f4565b9150509250929050565b600080600080608085870312156131ae57600080fd5b600085013567ffffffffffffffff8111156131c857600080fd5b6131d487828801612fae565b945050602085013567ffffffffffffffff8111156131f157600080fd5b6131fd87828801613002565b935050604085013567ffffffffffffffff81111561321a57600080fd5b61322687828801612fd8565b92505060606132378782880161302c565b91505092959194509250565b6000806000806080858703121561325957600080fd5b600085013567ffffffffffffffff81111561327357600080fd5b61327f87828801612fae565b945050602085013567ffffffffffffffff81111561329c57600080fd5b6132a887828801613002565b935050604085013567ffffffffffffffff8111156132c557600080fd5b6132d187828801612fd8565b925050606085013567ffffffffffffffff8111156132ee57600080fd5b6132fa878288016130ca565b91505092959194509250565b60006020828403121561331857600080fd5b60006133268482850161302c565b91505092915050565b6000806040838503121561334257600080fd5b60006133508582860161302c565b925050602061336185828601612f99565b9150509250929050565b60006020828403121561337d57600080fd5b600061338b84828501613041565b91505092915050565b6000602082840312156133a657600080fd5b60006133b4848285016130f4565b91505092915050565b6000602082840312156133cf57600080fd5b60006133dd84828501613109565b91505092915050565b600080604083850312156133f957600080fd5b6000613407858286016130f4565b925050602061341885828601612f99565b9150509250929050565b6000806040838503121561343557600080fd5b6000613443858286016130f4565b92505060206134548582860161311e565b9150509250929050565b6000806000806060858703121561347457600080fd5b6000613482878288016130f4565b94505060206134938782880161311e565b935050604085013567ffffffffffffffff8111156134b057600080fd5b6134bc87828801613080565b925092505092959194509250565b600080600080600060a086880312156134e257600080fd5b60006134f0888289016130f4565b95505060206135018882890161311e565b94505060406135128882890161311e565b93505060606135238882890161302c565b92505060806135348882890161302c565b9150509295509295909350565b600061354d8383613599565b60208301905092915050565b60006135658383613792565b905092915050565b6000613579838361381a565b905092915050565b600061358d8383613be2565b60208301905092915050565b6135a2816145ea565b82525050565b6135b1816145ea565b82525050565b60006135c2826143c8565b6135cc818561443e565b93506135d783614388565b8060005b838110156136085781516135ef8882613541565b97506135fa8361440a565b9250506001810190506135db565b5085935050505092915050565b6000613620826143d3565b61362a818561444f565b93508360208202850161363c85614398565b8060005b8581101561367857848403895281516136598582613559565b945061366483614417565b925060208a01995050600181019050613640565b50829750879550505050505092915050565b6000613695826143de565b61369f8185614460565b9350836020820285016136b1856143a8565b8060005b858110156136ed57848403895281516136ce858261356d565b94506136d983614424565b925060208a019950506001810190506136b5565b50829750879550505050505092915050565b600061370a826143e9565b6137148185614471565b935061371f836143b8565b8060005b838110156137505781516137378882613581565b975061374283614431565b925050600181019050613723565b5085935050505092915050565b613766816145fc565b82525050565b61377581614608565b82525050565b61378c61378782614608565b6147fc565b82525050565b600061379d826143f4565b6137a78185614482565b93506137b78185602086016146f3565b6137c0816148f1565b840191505092915050565b60006137d6826143f4565b6137e08185614493565b93506137f08185602086016146f3565b80840191505092915050565b6138058161469c565b82525050565b613814816146c0565b82525050565b6000613825826143ff565b61382f818561449e565b935061383f8185602086016146f3565b613848816148f1565b840191505092915050565b600061385e826143ff565b61386881856144af565b93506138788185602086016146f3565b613881816148f1565b840191505092915050565b6000613897826143ff565b6138a181856144c0565b93506138b18185602086016146f3565b80840191505092915050565b60006138ca6018836144af565b91506138d582614902565b602082019050919050565b60006138ed6018836144af565b91506138f88261492b565b602082019050919050565b60006139106020836144af565b915061391b82614954565b602082019050919050565b60006139336043836144af565b915061393e8261497d565b606082019050919050565b6000613956600f836144af565b9150613961826149f2565b602082019050919050565b6000613979601f836144af565b915061398482614a1b565b602082019050919050565b600061399c6002836144c0565b91506139a782614a44565b600282019050919050565b60006139bf6021836144af565b91506139ca82614a6d565b604082019050919050565b60006139e26022836144af565b91506139ed82614abc565b604082019050919050565b6000613a056027836144af565b9150613a1082614b0b565b604082019050919050565b6000613a286023836144af565b9150613a3382614b5a565b604082019050919050565b6000613a4b6021836144af565b9150613a5682614ba9565b604082019050919050565b6000613a6e6018836144af565b9150613a7982614bf8565b602082019050919050565b6000613a916022836144af565b9150613a9c82614c21565b604082019050919050565b6000613ab46026836144af565b9150613abf82614c70565b604082019050919050565b6000613ad76021836144af565b9150613ae282614cbf565b604082019050919050565b6000613afa601d836144af565b9150613b0582614d0e565b602082019050919050565b6000613b1d6035836144af565b9150613b2882614d37565b604082019050919050565b6000613b406021836144af565b9150613b4b82614d86565b604082019050919050565b6000613b636017836144c0565b9150613b6e82614dd5565b601782019050919050565b6000613b866027836144af565b9150613b9182614dfe565b604082019050919050565b6000613ba96011836144c0565b9150613bb482614e4d565b601182019050919050565b6000613bcc602f836144af565b9150613bd782614e76565b604082019050919050565b613beb81614671565b82525050565b613bfa81614671565b82525050565b613c09816146d2565b82525050565b613c188161468f565b82525050565b6000613c2a82846137cb565b915081905092915050565b6000613c408261398f565b9150613c4c828561377b565b602082019150613c5c828461377b565b6020820191508190509392505050565b6000613c7782613b56565b9150613c83828561388c565b9150613c8e82613b9c565b9150613c9a828461388c565b91508190509392505050565b6000604082019050613cbb60008301856135a8565b613cc86020830184613bf1565b9392505050565b60006080820190508181036000830152613ce981876135b7565b90508181036020830152613cfd81866136ff565b90508181036040830152613d118185613615565b9050613d20606083018461376c565b95945050505050565b6000602082019050613d3e600083018461375d565b92915050565b6000602082019050613d59600083018461376c565b92915050565b600060a082019050613d74600083018861376c565b613d81602083018761376c565b613d8e604083018661376c565b613d9b6060830185613bf1565b613da860808301846135a8565b9695505050505050565b6000606082019050613dc7600083018661376c565b613dd46020830185613bf1565b613de16040830184613c0f565b949350505050565b6000608082019050613dfe600083018761376c565b613e0b6020830186613c0f565b613e18604083018561376c565b613e25606083018461376c565b95945050505050565b6000602082019050613e4360008301846137fc565b92915050565b6000602082019050613e5e600083018461380b565b92915050565b60006020820190508181036000830152613e7e8184613853565b905092915050565b60006020820190508181036000830152613e9f816138bd565b9050919050565b60006020820190508181036000830152613ebf816138e0565b9050919050565b60006020820190508181036000830152613edf81613903565b9050919050565b60006020820190508181036000830152613eff81613926565b9050919050565b60006020820190508181036000830152613f1f81613949565b9050919050565b60006020820190508181036000830152613f3f8161396c565b9050919050565b60006020820190508181036000830152613f5f816139b2565b9050919050565b60006020820190508181036000830152613f7f816139d5565b9050919050565b60006020820190508181036000830152613f9f816139f8565b9050919050565b60006020820190508181036000830152613fbf81613a1b565b9050919050565b60006020820190508181036000830152613fdf81613a3e565b9050919050565b60006020820190508181036000830152613fff81613a61565b9050919050565b6000602082019050818103600083015261401f81613a84565b9050919050565b6000602082019050818103600083015261403f81613aa7565b9050919050565b6000602082019050818103600083015261405f81613aca565b9050919050565b6000602082019050818103600083015261407f81613aed565b9050919050565b6000602082019050818103600083015261409f81613b10565b9050919050565b600060208201905081810360008301526140bf81613b33565b9050919050565b600060208201905081810360008301526140df81613b79565b9050919050565b600060208201905081810360008301526140ff81613bbf565b9050919050565b600060208201905061411b6000830184613bf1565b92915050565b600061012082019050614137600083018c613bf1565b614144602083018b6135a8565b8181036040830152614156818a6135b7565b9050818103606083015261416a81896136ff565b9050818103608083015261417e818861368a565b905081810360a08301526141928187613615565b90506141a160c0830186613c00565b6141ae60e0830185613c00565b8181036101008301526141c18184613853565b90509a9950505050505050505050565b60006040820190506141e66000830185613bf1565b6141f36020830184613bf1565b9392505050565b600060608201905061420f6000830186613bf1565b61421c6020830185613bf1565b6142296040830184613bf1565b949350505050565b60006080820190506142466000830187613bf1565b6142536020830186613c0f565b6142606040830185613bf1565b81810360608301526142728184613853565b905095945050505050565b6000614287614298565b90506142938282614782565b919050565b6000604051905090565b600067ffffffffffffffff8211156142bd576142bc6148c2565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156142e9576142e86148c2565b5b602082029050602081019050919050565b600067ffffffffffffffff821115614315576143146148c2565b5b602082029050602081019050919050565b600067ffffffffffffffff821115614341576143406148c2565b5b61434a826148f1565b9050602081019050919050565b600067ffffffffffffffff821115614372576143716148c2565b5b61437b826148f1565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006144d682614671565b91506144e183614671565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561451657614515614806565b5b828201905092915050565b600061452c8261467b565b91506145378361467b565b92508267ffffffffffffffff0382111561455457614553614806565b5b828201905092915050565b600061456a82614671565b915061457583614671565b92508261458557614584614835565b5b828204905092915050565b600061459b82614671565b91506145a683614671565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156145df576145de614806565b5b828202905092915050565b60006145f582614651565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600081905061464c82614ec5565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600060ff82169050919050565b60006146a7826146ae565b9050919050565b60006146b982614651565b9050919050565b60006146cb8261463e565b9050919050565b60006146dd8261467b565b9050919050565b82818337600083830152505050565b60005b838110156147115780820151818401526020810190506146f6565b83811115614720576000848401525b50505050565b600061473182614671565b9150600082141561474557614744614806565b5b600182039050919050565b6000600282049050600182168061476857607f821691505b6020821081141561477c5761477b614893565b5b50919050565b61478b826148f1565b810181811067ffffffffffffffff821117156147aa576147a96148c2565b5b80604052505050565b60006147be82614671565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156147f1576147f0614806565b5b600182019050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b7f476f7665726e6f723a206f6e6c79476f7665726e616e63650000000000000000600082015250565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f476f7665726e6f72566f74657351756f72756d4672616374696f6e3a2071756f60008201527f72756d4e756d657261746f72206f7665722071756f72756d44656e6f6d696e6160208201527f746f720000000000000000000000000000000000000000000000000000000000604082015250565b7f6b616f4d6f6a69206e6f74207365740000000000000000000000000000000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f476f7665726e6f723a20696e76616c69642070726f706f73616c206c656e677460008201527f6800000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f476f7665726e6f72566f74696e6753696d706c653a20766f746520616c72656160008201527f6479206361737400000000000000000000000000000000000000000000000000602082015250565b7f476f7665726e6f723a20766f7465206e6f742063757272656e746c792061637460008201527f6976650000000000000000000000000000000000000000000000000000000000602082015250565b7f4f6e652070726f706f73616c20706572207472616e73616374696f6e206f6e6c60008201527f7900000000000000000000000000000000000000000000000000000000000000602082015250565b7f476f7665726e6f723a20656d7074792070726f706f73616c0000000000000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203660008201527f3420626974730000000000000000000000000000000000000000000000000000602082015250565b7f476f7665726e6f723a2070726f706f73616c206e6f742073756363657373667560008201527f6c00000000000000000000000000000000000000000000000000000000000000602082015250565b7f476f7665726e6f723a20756e6b6e6f776e2070726f706f73616c206964000000600082015250565b7f476f7665726e6f72566f74696e6753696d706c653a20696e76616c696420766160008201527f6c756520666f7220656e756d20566f7465547970650000000000000000000000602082015250565b7f476f7665726e6f723a2070726f706f73616c20616c726561647920657869737460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f7461726765742063616e206f6e6c7920626520746865206b616f4d6f6a69206360008201527f6f6e747261637400000000000000000000000000000000000000000000000000602082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60088110614ed657614ed5614864565b5b50565b614ee2816145ea565b8114614eed57600080fd5b50565b614ef981614608565b8114614f0457600080fd5b50565b614f1081614612565b8114614f1b57600080fd5b50565b614f2781614671565b8114614f3257600080fd5b50565b614f3e8161468f565b8114614f4957600080fd5b5056fe476f7665726e6f723a2063616c6c20726576657274656420776974686f7574206d657373616765a2646970667358221220e008eef4febefd1cf9c0a5453ebe81d0955def08dbb41dfa09bd71271a4ab6d064736f6c63430008040033\";\n\nexport class KaoDao__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _token: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<KaoDao> {\n    return super.deploy(_token, overrides || {}) as Promise<KaoDao>;\n  }\n  getDeployTransaction(\n    _token: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_token, overrides || {});\n  }\n  attach(address: string): KaoDao {\n    return super.attach(address) as KaoDao;\n  }\n  connect(signer: Signer): KaoDao__factory {\n    return super.connect(signer) as KaoDao__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): KaoDaoInterface {\n    return new utils.Interface(_abi) as KaoDaoInterface;\n  }\n  static connect(address: string, signerOrProvider: Signer | Provider): KaoDao {\n    return new Contract(address, _abi, signerOrProvider) as KaoDao;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { KaoMoji, KaoMojiInterface } from \"../KaoMoji\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"ADDRESS_UPDATER\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINTER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getDataOf\",\n    outputs: [\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"onERC721Received\",\n    outputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"\",\n        type: \"bytes4\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"_data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"auctionAddress\",\n        type: \"address\",\n      },\n    ],\n    name: \"setAuctionAddress\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"kaoToken\",\n        type: \"address\",\n      },\n    ],\n    name: \"setKaoToken\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"\";\n\nexport class KaoMoji__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<KaoMoji> {\n    return super.deploy(overrides || {}) as Promise<KaoMoji>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): KaoMoji {\n    return super.attach(address) as KaoMoji;\n  }\n  connect(signer: Signer): KaoMoji__factory {\n    return super.connect(signer) as KaoMoji__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): KaoMojiInterface {\n    return new utils.Interface(_abi) as KaoMojiInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): KaoMoji {\n    return new Contract(address, _abi, signerOrProvider) as KaoMoji;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { KaoToken, KaoTokenInterface } from \"../KaoToken\";\n\nconst _abi = [\n  {\n    inputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegator\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"fromDelegate\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"toDelegate\",\n        type: \"address\",\n      },\n    ],\n    name: \"DelegateChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"delegate\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"previousBalance\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"newBalance\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"DelegateVotesChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"previousAdminRole\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"newAdminRole\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"RoleAdminChanged\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleGranted\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n    ],\n    name: \"RoleRevoked\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"id\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Snapshot\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"DEFAULT_ADMIN_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"MINTER_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"SNAPSHOT_ROLE\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"snapshotId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"balanceOfAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint32\",\n        name: \"pos\",\n        type: \"uint32\",\n      },\n    ],\n    name: \"checkpoints\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"uint32\",\n            name: \"fromBlock\",\n            type: \"uint32\",\n          },\n          {\n            internalType: \"uint224\",\n            name: \"votes\",\n            type: \"uint224\",\n          },\n        ],\n        internalType: \"struct ERC20Votes.Checkpoint\",\n        name: \"\",\n        type: \"tuple\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"subtractedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"decreaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegate\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"delegatee\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"delegateBySig\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"delegates\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastTotalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"blockNumber\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getPastVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"getRoleAdmin\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"getVotes\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"grantRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"hasRole\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"addedValue\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"increaseAllowance\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"numCheckpoints\",\n    outputs: [\n      {\n        internalType: \"uint32\",\n        name: \"\",\n        type: \"uint32\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"deadline\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"renounceRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"role\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"address\",\n        name: \"account\",\n        type: \"address\",\n      },\n    ],\n    name: \"revokeRole\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"snapshot\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"snapshotId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"totalSupplyAt\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"recipient\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n\nconst _bytecode =\n  \"0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120908152503480156200003a57600080fd5b506040518060400160405280600781526020017f4d79546f6b656e00000000000000000000000000000000000000000000000000815250806040518060400160405280600181526020017f31000000000000000000000000000000000000000000000000000000000000008152506040518060400160405280600881526020017f4b616f546f6b656e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4b414f000000000000000000000000000000000000000000000000000000000081525081600390805190602001906200012c929190620010ef565b50806004908051906020019062000145929190620010ef565b50505060008280519060200120905060008280519060200120905060007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f90508260c081815250508160e081815250504660a08181525050620001b08184846200028460201b60201c565b60808181525050806101008181525050505050505050620001db6000801b33620002c060201b60201c565b6200020d7f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f33620002c060201b60201c565b6200023f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a633620002c060201b60201c565b6200027e3362000254620002d660201b60201c565b600a62000262919062001466565b620f4240620002729190620015a3565b620002df60201b60201c565b6200184b565b60008383834630604051602001620002a19594939291906200126e565b6040516020818303038152906040528051906020012090509392505050565b620002d28282620002fa60201b60201c565b5050565b60006012905090565b620002f68282620003ec60201b620015e31760201c565b5050565b6200030c8282620004aa60201b60201c565b620003e85760016009600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506200038d6200051560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6200040382826200051d60201b620016701760201c565b620004136200069660201b60201c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1662000441620006ba60201b60201c565b111562000485576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200047c90620012cb565b60405180910390fd5b620004a4600d620006c460201b620017d01783620006dc60201b60201c565b50505050565b60006009600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000590576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620005879062001331565b60405180910390fd5b620005a460008383620009f960201b60201c565b8060026000828254620005b89190620013ae565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200060f9190620013ae565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000676919062001353565b60405180910390a3620006926000838362000a1660201b60201c565b5050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b6000600254905090565b60008183620006d49190620013ae565b905092915050565b6000806000858054905090506000811462000775578560018262000701919062001604565b8154811062000739577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1662000778565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169250620007a483858760201c565b91506000811180156200082157504386600183620007c3919062001604565b81548110620007fb577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff16145b15620008e6576200083d8262000a3360201b620017e61760201c565b866001836200084d919062001604565b8154811062000885577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550620009f0565b856040518060400160405280620009084362000aa160201b620018511760201c565b63ffffffff168152602001620009298562000a3360201b620017e61760201c565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b50935093915050565b62000a1183838362000af760201b620018a41760201c565b505050565b62000a2e83838362000bf260201b6200195e1760201c565b505050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff801682111562000a99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000a9090620012ed565b60405180910390fd5b819050919050565b600063ffffffff801682111562000aef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000ae6906200130f565b60405180910390fd5b819050919050565b62000b0f83838362000c4260201b620019891760201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141562000b6c5762000b568262000c4760201b60201c565b62000b6662000caa60201b60201c565b62000bed565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000bc95762000bb38362000c4760201b60201c565b62000bc362000caa60201b60201c565b62000bec565b62000bda8362000c4760201b60201c565b62000beb8262000c4760201b60201c565b5b5b505050565b62000c0a83838362000cce60201b6200198e1760201c565b62000c3d62000c1f8462000cd360201b60201c565b62000c308462000cd360201b60201c565b8362000d3c60201b60201c565b505050565b505050565b62000ca7600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002062000c9b8362000f5f60201b60201c565b62000fa760201b60201c565b50565b62000ccc600662000cc0620006ba60201b60201c565b62000fa760201b60201c565b565b505050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801562000d795750600081115b1562000f5a57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161462000e6c5760008062000e13600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206200103360201b620019931785620006dc60201b60201c565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405162000e6192919062001370565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161462000f595760008062000f00600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020620006c460201b620017d01785620006dc60201b60201c565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724838360405162000f4e92919062001370565b60405180910390a250505b5b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600062000fb96200104b60201b60201c565b90508062000fd0846000016200106960201b60201c565b10156200102e5782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b6000818362001043919062001604565b905092915050565b6000620010646008620010e160201b620019a91760201c565b905090565b60008082805490501415620010825760009050620010dc565b816001838054905062001096919062001604565b81548110620010ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490505b919050565b600081600001549050919050565b828054620010fd9062001694565b90600052602060002090601f0160209004810192826200112157600085556200116d565b82601f106200113c57805160ff19168380011785556200116d565b828001600101855582156200116d579182015b828111156200116c5782518255916020019190600101906200114f565b5b5090506200117c919062001180565b5090565b5b808211156200119b57600081600090555060010162001181565b5090565b620011aa816200163f565b82525050565b620011bb8162001653565b82525050565b6000620011d06030836200139d565b9150620011dd8262001735565b604082019050919050565b6000620011f76027836200139d565b9150620012048262001784565b604082019050919050565b60006200121e6026836200139d565b91506200122b82620017d3565b604082019050919050565b600062001245601f836200139d565b9150620012528262001822565b602082019050919050565b62001268816200167d565b82525050565b600060a082019050620012856000830188620011b0565b620012946020830187620011b0565b620012a36040830186620011b0565b620012b260608301856200125d565b620012c160808301846200119f565b9695505050505050565b60006020820190508181036000830152620012e681620011c1565b9050919050565b600060208201905081810360008301526200130881620011e8565b9050919050565b600060208201905081810360008301526200132a816200120f565b9050919050565b600060208201905081810360008301526200134c8162001236565b9050919050565b60006020820190506200136a60008301846200125d565b92915050565b60006040820190506200138760008301856200125d565b6200139660208301846200125d565b9392505050565b600082825260208201905092915050565b6000620013bb826200167d565b9150620013c8836200167d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200140057620013ff620016ca565b5b828201905092915050565b6000808291508390505b60018511156200145d57808604811115620014355762001434620016ca565b5b6001851615620014455780820291505b8081029050620014558562001728565b945062001415565b94509492505050565b600062001473826200167d565b9150620014808362001687565b9250620014af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620014b7565b905092915050565b600082620014c957600190506200159c565b81620014d957600090506200159c565b8160018114620014f25760028114620014fd5762001533565b60019150506200159c565b60ff841115620015125762001511620016ca565b5b8360020a9150848211156200152c576200152b620016ca565b5b506200159c565b5060208310610133831016604e8410600b84101617156200156d5782820a905083811115620015675762001566620016ca565b5b6200159c565b6200157c84848460016200140b565b92509050818404811115620015965762001595620016ca565b5b81810290505b9392505050565b6000620015b0826200167d565b9150620015bd836200167d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620015f957620015f8620016ca565b5b828202905092915050565b600062001611826200167d565b91506200161e836200167d565b925082821015620016345762001633620016ca565b5b828203905092915050565b60006200164c826200165d565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006002820490506001821680620016ad57607f821691505b60208210811415620016c457620016c3620016f9565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60008160011c9050919050565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60805160a05160c05160e0516101005161012051614e606200189b60003960006112de0152600061204a0152600061208c0152600061206b01526000611ff70152600061201f0152614e606000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806370a082311161011a578063a217fddf116100ad578063d505accf1161007c578063d505accf14610687578063d5391393146106a3578063d547741f146106c1578063dd62ed3e146106dd578063f1127ed81461070d57610206565b8063a217fddf146105ed578063a457c2d71461060b578063a9059cbb1461063b578063c3cda5201461066b57610206565b806395d89b41116100e957806395d89b41146105655780639711715a14610583578063981b24d01461058d5780639ab24eb0146105bd57610206565b806370a08231146104a55780637ecebe00146104d55780638e539e8c1461050557806391d148541461053557610206565b80633644e5151161019d5780634ee2cd7e1161016c5780634ee2cd7e146103db578063587cde1e1461040b5780635c19a95c1461043b5780636fcfff45146104575780637028e2cd1461048757610206565b80633644e5151461034157806336568abe1461035f578063395093511461037b5780633a46b1a8146103ab57610206565b806323b872dd116101d957806323b872dd146102a7578063248a9ca3146102d75780632f2ff15d14610307578063313ce5671461032357610206565b806301ffc9a71461020b57806306fdde031461023b578063095ea7b31461025957806318160ddd14610289575b600080fd5b61022560048036038101906102209190613947565b61073d565b6040516102329190613efe565b60405180910390f35b6102436107b7565b6040516102509190614072565b60405180910390f35b610273600480360381019061026e91906137e1565b610849565b6040516102809190613efe565b60405180910390f35b610291610867565b60405161029e91906143af565b60405180910390f35b6102c160048036038101906102bc91906136f4565b610871565b6040516102ce9190613efe565b60405180910390f35b6102f160048036038101906102ec91906138e2565b610969565b6040516102fe9190613f19565b60405180910390f35b610321600480360381019061031c919061390b565b610989565b005b61032b6109b2565b604051610338919061440e565b60405180910390f35b6103496109bb565b6040516103569190613f19565b60405180910390f35b6103796004803603810190610374919061390b565b6109ca565b005b610395600480360381019061039091906137e1565b610a4d565b6040516103a29190613efe565b60405180910390f35b6103c560048036038101906103c091906137e1565b610af9565b6040516103d291906143af565b60405180910390f35b6103f560048036038101906103f091906137e1565b610b8d565b60405161040291906143af565b60405180910390f35b6104256004803603810190610420919061368f565b610bfd565b6040516104329190613ee3565b60405180910390f35b6104556004803603810190610450919061368f565b610c66565b005b610471600480360381019061046c919061368f565b610c7a565b60405161047e91906143f3565b60405180910390f35b61048f610cce565b60405161049c9190613f19565b60405180910390f35b6104bf60048036038101906104ba919061368f565b610cf2565b6040516104cc91906143af565b60405180910390f35b6104ef60048036038101906104ea919061368f565b610d3a565b6040516104fc91906143af565b60405180910390f35b61051f600480360381019061051a9190613970565b610d8a565b60405161052c91906143af565b60405180910390f35b61054f600480360381019061054a919061390b565b610de0565b60405161055c9190613efe565b60405180910390f35b61056d610e4b565b60405161057a9190614072565b60405180910390f35b61058b610edd565b005b6105a760048036038101906105a29190613970565b610f1b565b6040516105b491906143af565b60405180910390f35b6105d760048036038101906105d2919061368f565b610f4c565b6040516105e491906143af565b60405180910390f35b6105f5611083565b6040516106029190613f19565b60405180910390f35b610625600480360381019061062091906137e1565b61108a565b6040516106329190613efe565b60405180910390f35b610655600480360381019061065091906137e1565b611175565b6040516106629190613efe565b60405180910390f35b6106856004803603810190610680919061381d565b611193565b005b6106a1600480360381019061069c9190613743565b611297565b005b6106ab6113d9565b6040516106b89190613f19565b60405180910390f35b6106db60048036038101906106d6919061390b565b6113fd565b005b6106f760048036038101906106f291906136b8565b611426565b60405161070491906143af565b60405180910390f35b610727600480360381019061072291906138a6565b6114ad565b6040516107349190614394565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806107b057506107af826119b7565b5b9050919050565b6060600380546107c690614685565b80601f01602080910402602001604051908101604052809291908181526020018280546107f290614685565b801561083f5780601f106108145761010080835404028352916020019161083f565b820191906000526020600020905b81548152906001019060200180831161082257829003601f168201915b5050505050905090565b600061085d610856611a21565b8484611a29565b6001905092915050565b6000600254905090565b600061087e848484611bf4565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006108c9611a21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094090614254565b60405180910390fd5b61095d85610955611a21565b858403611a29565b60019150509392505050565b600060096000838152602001908152602001600020600101549050919050565b61099282610969565b6109a38161099e611a21565b611e75565b6109ad8383611f12565b505050565b60006012905090565b60006109c5611ff3565b905090565b6109d2611a21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690614354565b60405180910390fd5b610a4982826120b6565b5050565b6000610aef610a5a611a21565b848460016000610a68611a21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610aea9190614450565b611a29565b6001905092915050565b6000438210610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3490614114565b60405180910390fd5b610b85600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083612198565b905092915050565b6000806000610bda84600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206122f0565b9150915081610bf157610bec85610cf2565b610bf3565b805b9250505092915050565b6000600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610c77610c71611a21565b8261240c565b50565b6000610cc7600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050611851565b9050919050565b7f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f81565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000610d83600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206119a9565b9050919050565b6000438210610dce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc590614114565b60405180910390fd5b610dd9600d83612198565b9050919050565b60006009600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b606060048054610e5a90614685565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8690614685565b8015610ed35780601f10610ea857610100808354040283529160200191610ed3565b820191906000526020600020905b815481529060010190602001808311610eb657829003601f168201915b5050505050905090565b7f5fdbd35e8da83ee755d5e62a539e5ed7f47126abede0b8b10f9ea43dc6eed07f610f0f81610f0a611a21565b611e75565b610f17612526565b5050565b6000806000610f2b8460066122f0565b9150915081610f4157610f3c610867565b610f43565b805b92505050919050565b600080600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905090506000811461105a57600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600182610fe89190614531565b8154811061101f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661105d565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16915050919050565b6000801b81565b60008060016000611099611a21565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015611156576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114d90614334565b60405180910390fd5b61116a611161611a21565b85858403611a29565b600191505092915050565b6000611189611182611a21565b8484611bf4565b6001905092915050565b834211156111d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cd90614134565b60405180910390fd5b60006112386112307fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf8989896040516020016112159493929190613f95565b6040516020818303038152906040528051906020012061257c565b858585612596565b9050611243816125c1565b8614611284576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127b90614174565b60405180910390fd5b61128e818861240c565b50505050505050565b834211156112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d1906141b4565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000008888886113098c6125c1565b8960405160200161131f96959493929190613f34565b60405160208183030381529060405280519060200120905060006113428261257c565b9050600061135282878787612596565b90508973ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113b990614234565b60405180910390fd5b6113cd8a8a8a611a29565b50505050505050505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61140682610969565b61141781611412611a21565b611e75565b61142183836120b6565b505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6114b56135d3565b600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208263ffffffff1681548110611532577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020016040518060400160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525050905092915050565b6115ed8282611670565b6115f561261f565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1661161b610867565b111561165c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165390614274565b60405180910390fd5b61166a600d6117d083612643565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116d790614374565b60405180910390fd5b6116ec6000838361292d565b80600260008282546116fe9190614450565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117539190614450565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117b891906143af565b60405180910390a36117cc6000838361293d565b5050565b600081836117de9190614450565b905092915050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8016821115611849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184090614294565b60405180910390fd5b819050919050565b600063ffffffff801682111561189c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611893906142d4565b60405180910390fd5b819050919050565b6118af838383611989565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156118fa576118ed8261294d565b6118f56129a0565b611959565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611945576119388361294d565b6119406129a0565b611958565b61194e8361294d565b6119578261294d565b5b5b505050565b61196983838361198e565b61198461197584610bfd565b61197e84610bfd565b836129b4565b505050565b505050565b505050565b600081836119a19190614531565b905092915050565b600081600001549050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a90906142f4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0090614194565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051611be791906143af565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5b906142b4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ccb906140f4565b60405180910390fd5b611cdf83838361292d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611d65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d5c906141d4565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611df89190614450565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611e5c91906143af565b60405180910390a3611e6f84848461293d565b50505050565b611e7f8282610de0565b611f0e57611ea48173ffffffffffffffffffffffffffffffffffffffff166014612bad565b611eb28360001c6020612bad565b604051602001611ec3929190613ea9565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f059190614072565b60405180910390fd5b5050565b611f1c8282610de0565b611fef5760016009600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611f94611a21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b60007f0000000000000000000000000000000000000000000000000000000000000000461415612045577f000000000000000000000000000000000000000000000000000000000000000090506120b3565b6120b07f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612ea7565b90505b90565b6120c08282610de0565b156121945760006009600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550612139611a21565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b6000808380549050905060005b8181101561223d5760006121b98284612ee1565b9050848682815481106121f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff16111561222757809250612237565b6001816122349190614450565b91505b506121a5565b600082146122c557846001836122539190614531565b8154811061228a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166122c8565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff169250505092915050565b60008060008411612336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161232d90614314565b60405180910390fd5b61233e612f07565b841115612380576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612377906140b4565b60405180910390fd5b60006123988585600001612f1890919063ffffffff16565b905083600001805490508114156123b6576000809250925050612405565b60018460010182815481106123f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015492509250505b9250929050565b600061241783610bfd565b9050600061242484610cf2565b905082600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60405160405180910390a46125208284836129b4565b50505050565b6000612532600861303e565b600061253c612f07565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb678160405161256d91906143af565b60405180910390a18091505090565b600061258f612589611ff3565b83613054565b9050919050565b60008060006125a787878787613087565b915091506125b481613194565b8192505050949350505050565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905061260e816119a9565b91506126198161303e565b50919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff905090565b600080600085805490509050600081146126d757856001826126659190614531565b8154811061269c577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160049054906101000a90047bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166126da565b60005b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16925061270883858763ffffffff16565b9150600081118015612781575043866001836127249190614531565b8154811061275b577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160009054906101000a900463ffffffff1663ffffffff16145b156128345761278f826117e6565b8660018361279d9190614531565b815481106127d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff160217905550612924565b85604051806040016040528061284943611851565b63ffffffff16815260200161285d856117e6565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff168152509080600181540180825580915050600190039060005260206000200160009091909190915060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a8154817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff02191690837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff16021790555050505b50935093915050565b6129388383836118a4565b505050565b61294883838361195e565b505050565b61299d600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061299883610cf2565b6134e5565b50565b6129b260066129ad610867565b6134e5565b565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156129f05750600081115b15612ba857600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612ace57600080612a77600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061199385612643565b915091508473ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612ac39291906143ca565b60405180910390a250505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614612ba757600080612b50600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206117d085612643565b915091508373ffffffffffffffffffffffffffffffffffffffff167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051612b9c9291906143ca565b60405180910390a250505b5b505050565b606060006002836002612bc091906144d7565b612bca9190614450565b67ffffffffffffffff811115612c09577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612c3b5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612c99577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110612d23577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002612d6391906144d7565b612d6d9190614450565b90505b6001811115612e59577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612dd5577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1a60f81b828281518110612e12577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080612e529061465b565b9050612d70565b5060008414612e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e94906140d4565b60405180910390fd5b8091505092915050565b60008383834630604051602001612ec2959493929190613fda565b6040516020818303038152906040528051906020012090509392505050565b60006002828418612ef291906144a6565b828416612eff9190614450565b905092915050565b6000612f1360086119a9565b905090565b60008083805490501415612f2f5760009050613038565b600080848054905090505b80821015612fb9576000612f4e8383612ee1565b905084868281548110612f8a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001541115612fa357809150612fb3565b600181612fb09190614450565b92505b50612f3a565b60008211801561301757508385600184612fd39190614531565b8154811061300a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154145b15613032576001826130299190614531565b92505050613038565b81925050505b92915050565b6001816000016000828254019250508190555050565b60008282604051602001613069929190613e72565b60405160208183030381529060405280519060200120905092915050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156130c257600060039150915061318b565b601b8560ff16141580156130da5750601c8560ff1614155b156130ec57600060049150915061318b565b600060018787878760405160008152602001604052604051613111949392919061402d565b6020604051602081039080840390855afa158015613133573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156131825760006001925092505061318b565b80600092509250505b94509492505050565b600060048111156131ce577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115613207577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1415613212576134e2565b6001600481111561324c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115613285577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156132c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132bd90614094565b60405180910390fd5b60026004811115613300577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b816004811115613339577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561337a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161337190614154565b60405180910390fd5b600360048111156133b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156133ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561342e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613425906141f4565b60405180910390fd5b600480811115613467577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160048111156134a0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14156134e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016134d890614214565b60405180910390fd5b5b50565b60006134ef612f07565b9050806134fe84600001613560565b101561355b5782600001819080600181540180825580915050600190039060005260206000200160009091909190915055826001018290806001815401808255809150506001900390600052602060002001600090919091909150555b505050565b6000808280549050141561357757600090506135ce565b81600183805490506135899190614531565b815481106135c0577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906000526020600020015490505b919050565b6040518060400160405280600063ffffffff16815260200160007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1681525090565b60008135905061362081614da0565b92915050565b60008135905061363581614db7565b92915050565b60008135905061364a81614dce565b92915050565b60008135905061365f81614de5565b92915050565b60008135905061367481614dfc565b92915050565b60008135905061368981614e13565b92915050565b6000602082840312156136a157600080fd5b60006136af84828501613611565b91505092915050565b600080604083850312156136cb57600080fd5b60006136d985828601613611565b92505060206136ea85828601613611565b9150509250929050565b60008060006060848603121561370957600080fd5b600061371786828701613611565b935050602061372886828701613611565b925050604061373986828701613650565b9150509250925092565b600080600080600080600060e0888a03121561375e57600080fd5b600061376c8a828b01613611565b975050602061377d8a828b01613611565b965050604061378e8a828b01613650565b955050606061379f8a828b01613650565b94505060806137b08a828b0161367a565b93505060a06137c18a828b01613626565b92505060c06137d28a828b01613626565b91505092959891949750929550565b600080604083850312156137f457600080fd5b600061380285828601613611565b925050602061381385828601613650565b9150509250929050565b60008060008060008060c0878903121561383657600080fd5b600061384489828a01613611565b965050602061385589828a01613650565b955050604061386689828a01613650565b945050606061387789828a0161367a565b935050608061388889828a01613626565b92505060a061389989828a01613626565b9150509295509295509295565b600080604083850312156138b957600080fd5b60006138c785828601613611565b92505060206138d885828601613665565b9150509250929050565b6000602082840312156138f457600080fd5b600061390284828501613626565b91505092915050565b6000806040838503121561391e57600080fd5b600061392c85828601613626565b925050602061393d85828601613611565b9150509250929050565b60006020828403121561395957600080fd5b60006139678482850161363b565b91505092915050565b60006020828403121561398257600080fd5b600061399084828501613650565b91505092915050565b6139a281614565565b82525050565b6139b181614577565b82525050565b6139c081614583565b82525050565b6139d76139d282614583565b6146b7565b82525050565b60006139e882614429565b6139f28185614434565b9350613a02818560208601614628565b613a0b8161474e565b840191505092915050565b6000613a2182614429565b613a2b8185614445565b9350613a3b818560208601614628565b80840191505092915050565b6000613a54601883614434565b9150613a5f8261475f565b602082019050919050565b6000613a77601d83614434565b9150613a8282614788565b602082019050919050565b6000613a9a602083614434565b9150613aa5826147b1565b602082019050919050565b6000613abd602383614434565b9150613ac8826147da565b604082019050919050565b6000613ae0601f83614434565b9150613aeb82614829565b602082019050919050565b6000613b03601d83614434565b9150613b0e82614852565b602082019050919050565b6000613b26601f83614434565b9150613b318261487b565b602082019050919050565b6000613b49601983614434565b9150613b54826148a4565b602082019050919050565b6000613b6c602283614434565b9150613b77826148cd565b604082019050919050565b6000613b8f600283614445565b9150613b9a8261491c565b600282019050919050565b6000613bb2601d83614434565b9150613bbd82614945565b602082019050919050565b6000613bd5602683614434565b9150613be08261496e565b604082019050919050565b6000613bf8602283614434565b9150613c03826149bd565b604082019050919050565b6000613c1b602283614434565b9150613c2682614a0c565b604082019050919050565b6000613c3e601e83614434565b9150613c4982614a5b565b602082019050919050565b6000613c61602883614434565b9150613c6c82614a84565b604082019050919050565b6000613c84603083614434565b9150613c8f82614ad3565b604082019050919050565b6000613ca7602783614434565b9150613cb282614b22565b604082019050919050565b6000613cca602583614434565b9150613cd582614b71565b604082019050919050565b6000613ced602683614434565b9150613cf882614bc0565b604082019050919050565b6000613d10602483614434565b9150613d1b82614c0f565b604082019050919050565b6000613d33601683614434565b9150613d3e82614c5e565b602082019050919050565b6000613d56601783614445565b9150613d6182614c87565b601782019050919050565b6000613d79602583614434565b9150613d8482614cb0565b604082019050919050565b6000613d9c601183614445565b9150613da782614cff565b601182019050919050565b6000613dbf602f83614434565b9150613dca82614d28565b604082019050919050565b6000613de2601f83614434565b9150613ded82614d77565b602082019050919050565b604082016000820151613e0e6000850182613e45565b506020820151613e216020850182613e27565b50505050565b613e30816145d9565b82525050565b613e3f81614601565b82525050565b613e4e8161460b565b82525050565b613e5d8161460b565b82525050565b613e6c8161461b565b82525050565b6000613e7d82613b82565b9150613e8982856139c6565b602082019150613e9982846139c6565b6020820191508190509392505050565b6000613eb482613d49565b9150613ec08285613a16565b9150613ecb82613d8f565b9150613ed78284613a16565b91508190509392505050565b6000602082019050613ef86000830184613999565b92915050565b6000602082019050613f1360008301846139a8565b92915050565b6000602082019050613f2e60008301846139b7565b92915050565b600060c082019050613f4960008301896139b7565b613f566020830188613999565b613f636040830187613999565b613f706060830186613e36565b613f7d6080830185613e36565b613f8a60a0830184613e36565b979650505050505050565b6000608082019050613faa60008301876139b7565b613fb76020830186613999565b613fc46040830185613e36565b613fd16060830184613e36565b95945050505050565b600060a082019050613fef60008301886139b7565b613ffc60208301876139b7565b61400960408301866139b7565b6140166060830185613e36565b6140236080830184613999565b9695505050505050565b600060808201905061404260008301876139b7565b61404f6020830186613e63565b61405c60408301856139b7565b61406960608301846139b7565b95945050505050565b6000602082019050818103600083015261408c81846139dd565b905092915050565b600060208201905081810360008301526140ad81613a47565b9050919050565b600060208201905081810360008301526140cd81613a6a565b9050919050565b600060208201905081810360008301526140ed81613a8d565b9050919050565b6000602082019050818103600083015261410d81613ab0565b9050919050565b6000602082019050818103600083015261412d81613ad3565b9050919050565b6000602082019050818103600083015261414d81613af6565b9050919050565b6000602082019050818103600083015261416d81613b19565b9050919050565b6000602082019050818103600083015261418d81613b3c565b9050919050565b600060208201905081810360008301526141ad81613b5f565b9050919050565b600060208201905081810360008301526141cd81613ba5565b9050919050565b600060208201905081810360008301526141ed81613bc8565b9050919050565b6000602082019050818103600083015261420d81613beb565b9050919050565b6000602082019050818103600083015261422d81613c0e565b9050919050565b6000602082019050818103600083015261424d81613c31565b9050919050565b6000602082019050818103600083015261426d81613c54565b9050919050565b6000602082019050818103600083015261428d81613c77565b9050919050565b600060208201905081810360008301526142ad81613c9a565b9050919050565b600060208201905081810360008301526142cd81613cbd565b9050919050565b600060208201905081810360008301526142ed81613ce0565b9050919050565b6000602082019050818103600083015261430d81613d03565b9050919050565b6000602082019050818103600083015261432d81613d26565b9050919050565b6000602082019050818103600083015261434d81613d6c565b9050919050565b6000602082019050818103600083015261436d81613db2565b9050919050565b6000602082019050818103600083015261438d81613dd5565b9050919050565b60006040820190506143a96000830184613df8565b92915050565b60006020820190506143c46000830184613e36565b92915050565b60006040820190506143df6000830185613e36565b6143ec6020830184613e36565b9392505050565b60006020820190506144086000830184613e54565b92915050565b60006020820190506144236000830184613e63565b92915050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061445b82614601565b915061446683614601565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561449b5761449a6146c1565b5b828201905092915050565b60006144b182614601565b91506144bc83614601565b9250826144cc576144cb6146f0565b5b828204905092915050565b60006144e282614601565b91506144ed83614601565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614526576145256146c1565b5b828202905092915050565b600061453c82614601565b915061454783614601565b92508282101561455a576145596146c1565b5b828203905092915050565b6000614570826145b9565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600060ff82169050919050565b60005b8381101561464657808201518184015260208101905061462b565b83811115614655576000848401525b50505050565b600061466682614601565b9150600082141561467a576146796146c1565b5b600182039050919050565b6000600282049050600182168061469d57607f821691505b602082108114156146b1576146b061471f565b5b50919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b7f4552433230536e617073686f743a206e6f6e6578697374656e74206964000000600082015250565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e656400600082015250565b7f4552433230566f7465733a207369676e61747572652065787069726564000000600082015250565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b7f4552433230566f7465733a20696e76616c6964206e6f6e636500000000000000600082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f1901000000000000000000000000000000000000000000000000000000000000600082015250565b7f45524332305065726d69743a206578706972656420646561646c696e65000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332305065726d69743a20696e76616c6964207369676e61747572650000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60008201527f766572666c6f77696e6720766f74657300000000000000000000000000000000602082015250565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203260008201527f3234206269747300000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f53616665436173743a2076616c756520646f65736e27742066697420696e203360008201527f3220626974730000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433230536e617073686f743a206964206973203000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b614da981614565565b8114614db457600080fd5b50565b614dc081614583565b8114614dcb57600080fd5b50565b614dd78161458d565b8114614de257600080fd5b50565b614dee81614601565b8114614df957600080fd5b50565b614e058161460b565b8114614e1057600080fd5b50565b614e1c8161461b565b8114614e2757600080fd5b5056fea26469706673582212207cd28cf4c7d1c2ab9561856b3a8fa95bcbd1a5fb5110ba2d7ca0e130c9f1b1b664736f6c63430008040033\";\n\nexport class KaoToken__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<KaoToken> {\n    return super.deploy(overrides || {}) as Promise<KaoToken>;\n  }\n  getDeployTransaction(\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(overrides || {});\n  }\n  attach(address: string): KaoToken {\n    return super.attach(address) as KaoToken;\n  }\n  connect(signer: Signer): KaoToken__factory {\n    return super.connect(signer) as KaoToken__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): KaoTokenInterface {\n    return new utils.Interface(_abi) as KaoTokenInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): KaoToken {\n    return new Contract(address, _abi, signerOrProvider) as KaoToken;\n  }\n}\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Signer, utils, Contract, ContractFactory, Overrides } from \"ethers\";\nimport { Provider, TransactionRequest } from \"@ethersproject/providers\";\nimport type { AuctionHouse, AuctionHouseInterface } from \"../AuctionHouse\";\n\nconst _abi = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_weth\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"AuctionApprovalUpdated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"sender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"value\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"firstBid\",\n        type: \"bool\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"extended\",\n        type: \"bool\",\n      },\n    ],\n    name: \"AuctionBid\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenOwner\",\n        type: \"address\",\n      },\n    ],\n    name: \"AuctionCanceled\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"reservePrice\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"curator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint8\",\n        name: \"curatorFeePercentage\",\n        type: \"uint8\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"auctionCurrency\",\n        type: \"address\",\n      },\n    ],\n    name: \"AuctionCreated\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AuctionDurationExtended\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"tokenOwner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"curator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"winner\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"curatorFee\",\n        type: \"uint256\",\n      },\n      {\n        indexed: false,\n        internalType: \"address\",\n        name: \"auctionCurrency\",\n        type: \"address\",\n      },\n    ],\n    name: \"AuctionEnded\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"reservePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"AuctionReservePriceUpdated\",\n    type: \"event\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"auctions\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"firstBidTime\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reservePrice\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"curatorFeePercentage\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenOwner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"bidder\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"curator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"auctionCurrency\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"cancelAuction\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"tokenContract\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"duration\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reservePrice\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"address payable\",\n        name: \"curator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"curatorFeePercentage\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"address\",\n        name: \"auctionCurrency\",\n        type: \"address\",\n      },\n    ],\n    name: \"createAuction\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"createBid\",\n    outputs: [],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"endAuction\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"minBidIncrementPercentage\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setAuctionApproval\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"auctionId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"reservePrice\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"setAuctionReservePrice\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"timeBuffer\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"wethAddress\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    stateMutability: \"payable\",\n    type: \"receive\",\n  },\n];\n\nconst _bytecode =\n  \"0x60806040523480156200001157600080fd5b50604051620044ec380380620044ec8339818101604052810190620000379190620000c3565b600160008190555080600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103846001819055506005600260006101000a81548160ff021916908360ff160217905550506200013d565b600081519050620000bd8162000123565b92915050565b600060208284031215620000d657600080fd5b6000620000e684828501620000ac565b91505092915050565b6000620000fc8262000103565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200012e81620000ef565b81146200013a57600080fd5b50565b61439f806200014d6000396000f3fe6080604052600436106100955760003560e01c8063973ddb4a11610059578063973ddb4a146101a0578063b296024d146101c9578063b7751c71146101f4578063b9a2de3a14610210578063ec91f2a4146102395761009c565b80634f0e0ef31461009e578063571a26a0146100c95780636f8a41e11461011157806375e9249f1461013a57806396b5a755146101775761009c565b3661009c57005b005b3480156100aa57600080fd5b506100b3610264565b6040516100c0919061354e565b60405180910390f35b3480156100d557600080fd5b506100f060048036038101906100eb919061301d565b61028a565b6040516101089c9b9a999897969594939291906139e9565b60405180910390f35b34801561011d57600080fd5b5061013860048036038101906101339190613149565b6103a4565b005b34801561014657600080fd5b50610161600480360381019061015c919061306f565b610612565b60405161016e91906139ce565b60405180910390f35b34801561018357600080fd5b5061019e6004803603810190610199919061301d565b610e65565b005b3480156101ac57600080fd5b506101c760048036038101906101c2919061310d565b61107a565b005b3480156101d557600080fd5b506101de6111cf565b6040516101eb9190613b04565b60405180910390f35b61020e60048036038101906102099190613149565b6111e2565b005b34801561021c57600080fd5b506102376004803603810190610232919061301d565b6118d6565b005b34801561024557600080fd5b5061024e6120fa565b60405161025b91906139ce565b60405180910390f35b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060020154908060030154908060040154908060050154908060060160009054906101000a900460ff16908060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508c565b816103ae81612100565b6103ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e49061384e565b60405180910390fd5b6003600084815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104be57506003600084815260200190815260200160002060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6104fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f49061388e565b60405180910390fd5b6000600360008581526020019081526020016000206004015414610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d9061380e565b60405180910390fd5b8160036000858152602001908152602001600020600501819055506003600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000154847f01e6a465ec1edd582d333147c7b7edf5998164f2cf2269dcb9c93d46c67bd3178560405161060591906139ce565b60405180910390a4505050565b60006002600054141561065a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106519061394e565b60405180910390fd5b60026000819055508673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b81526004016106a291906136c1565b60206040518083038186803b1580156106ba57600080fd5b505afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f29190612ff4565b8061078957508673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd60e01b6040518263ffffffff1660e01b815260040161073891906136c1565b60206040518083038186803b15801561075057600080fd5b505afa158015610764573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107889190612ff4565b5b6107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf9061398e565b60405180910390fd5b60648360ff161061080e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108059061390e565b60405180910390fd5b60008773ffffffffffffffffffffffffffffffffffffffff16636352211e8a6040518263ffffffff1660e01b815260040161084991906139ce565b60206040518083038186803b15801561086157600080fd5b505afa158015610875573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108999190612fcb565b90508773ffffffffffffffffffffffffffffffffffffffff1663081812fc8a6040518263ffffffff1660e01b81526004016108d491906139ce565b60206040518083038186803b1580156108ec57600080fd5b505afa158015610900573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109249190612fcb565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061098857508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6109c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109be9061392e565b60405180910390fd5b60006109d3600461216f565b90506040518061018001604052808b81526020018a73ffffffffffffffffffffffffffffffffffffffff16815260200160001515815260200160008152602001898152602001600081526020018881526020018660ff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815250600360008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908315150217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e08201518160060160006101000a81548160ff021916908360ff1602179055506101008201518160060160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101208201518160070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101408201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101608201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508873ffffffffffffffffffffffffffffffffffffffff166323b872dd83308d6040518463ffffffff1660e01b8152600401610ccb93929190613601565b600060405180830381600087803b158015610ce557600080fd5b505af1158015610cf9573d6000803e3d6000fd5b50505050610d07600461217d565b8873ffffffffffffffffffffffffffffffffffffffff168a827f38c0b9047bd28fac9f420b967f6caf4a6260ba09d18940a9a502578a480c09008b8b878c8c8c604051610d5996959493929190613aa3565b60405180910390a4600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610dfd57508173ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b15610e0e57610e0d816001612193565b5b610e4d6040518060400160405280601281526020017f41756374696f6e2063726561746564202573000000000000000000000000000081525082612261565b80925050506001600081905550979650505050505050565b60026000541415610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea29061394e565b60405180910390fd5b600260008190555080610ebd81612100565b610efc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef39061384e565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610fcd57503373ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61100c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611003906137ae565b60405180910390fd5b6000600360008481526020019081526020016000206004015414611065576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105c9061372e565b60405180910390fd5b61106e826122fd565b50600160008190555050565b8161108481612100565b6110c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ba9061384e565b60405180910390fd5b6003600084815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115e9061374e565b60405180910390fd5b60006003600085815260200190815260200160002060040154146111c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b79061380e565b60405180910390fd5b6111ca8383612193565b505050565b600260009054906101000a900460ff1681565b816111ec81612100565b61122b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112229061384e565b60405180910390fd5b60026000541415611271576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112689061394e565b60405180910390fd5b600260008190555060006003600085815260200190815260200160002060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506003600085815260200190815260200160002060010160149054906101000a900460ff16611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130e906137ee565b60405180910390fd5b6000600360008681526020019081526020016000206004015414806113795750611376600360008681526020019081526020016000206003015460036000878152602001908152602001600020600401546125bc90919063ffffffff16565b42105b6113b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113af9061396e565b60405180910390fd5b6003600085815260200190815260200160002060050154831015611411576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611408906137ce565b60405180910390fd5b6114876114626064611454600260009054906101000a900460ff1660ff16600360008a8152602001908152602001600020600201546125d290919063ffffffff16565b6125e890919063ffffffff16565b60036000878152602001908152602001600020600201546125bc90919063ffffffff16565b8310156114c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c09061382e565b60405180910390fd5b60006003600086815260200190815260200160002060040154141561150857426003600086815260200190815260200160002060040181905550611595565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611594576115938160036000878152602001908152602001600020600201546003600088815260200190815260200160002060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166125fe565b5b5b6115d5836003600087815260200190815260200160002060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166127d5565b826003600086815260200190815260200160002060020181905550336003600086815260200190815260200160002060070160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060015461169b4261168d600360008a815260200190815260200160002060030154600360008b8152602001908152602001600020600401546125bc90919063ffffffff16565b612a7c90919063ffffffff16565b101561173d5760006003600087815260200190815260200160002060030154905061171d61170e6116fd426116ef85600360008d8152602001908152602001600020600401546125bc90919063ffffffff16565b612a7c90919063ffffffff16565b600154612a7c90919063ffffffff16565b826125bc90919063ffffffff16565b600360008881526020019081526020016000206003018190555060019150505b6003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600087815260200190815260200160002060000154867fda6b779568630ce5e5658b317174df474d5b335541ed9471bd8424a017f3be6d3388600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614876040516118069493929190613661565b60405180910390a480156118c7576003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600087815260200190815260200160002060000154867f55cf2b31608fbe49fa31cd0285b6b6cce46f56d26c8c59980a2af5a0ffbdd5db600360008a8152602001908152602001600020600301546040516118be91906139ce565b60405180910390a45b50506001600081905550505050565b806118e081612100565b61191f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119169061384e565b60405180910390fd5b60026000541415611965576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195c9061394e565b60405180910390fd5b60026000819055506000600360008481526020019081526020016000206004015414156119c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119be9061378e565b60405180910390fd5b611a06600360008481526020019081526020016000206003015460036000858152602001908152602001600020600401546125bc90919063ffffffff16565b421015611a48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a3f906138ee565b60405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611aef576003600084815260200190815260200160002060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611b13565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff165b9050600080600360008681526020019081526020016000206002015490506003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e306003600089815260200190815260200160002060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008a8152602001908152602001600020600001546040518463ffffffff1660e01b8152600401611bf0939291906135ca565b600060405180830381600087803b158015611c0a57600080fd5b505af1925050508015611c1b575060015b611cbd57611cac6003600087815260200190815260200160002060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660036000888152602001908152602001600020600201546003600089815260200190815260200160002060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166125fe565b611cb5856122fd565b5050506120ee565b600073ffffffffffffffffffffffffffffffffffffffff166003600087815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e0257611d736064611d656003600089815260200190815260200160002060060160009054906101000a900460ff1660ff16846125d290919063ffffffff16565b6125e890919063ffffffff16565b9150611d888282612a7c90919063ffffffff16565b9050611e016003600087815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836003600089815260200190815260200160002060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166125fe565b5b611e796003600087815260200190815260200160002060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826003600089815260200190815260200160002060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166125fe565b6003600086815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600087815260200190815260200160002060000154867f4f35fb3ea0081b3ccbe8df613cab0f9e1694d50a025e0aa09b88a86a3d07c2de600360008a815260200190815260200160002060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008b815260200190815260200160002060080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360008c815260200190815260200160002060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1687898b604051611fb996959493929190613569565b60405180910390a4600360008681526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160146101000a81549060ff021916905560028201600090556003820160009055600482016000905560058201600090556006820160006101000a81549060ff02191690556006820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556007820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556008820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550505050505b60016000819055505050565b60015481565b60008073ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600081600001549050919050565b6001816000016000828254019250508190555050565b806003600084815260200190815260200160002060010160146101000a81548160ff0219169083151502179055506003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060000154837fec35d321ab4972475f131e184c0c0fe52c5a58a29d74f7db2969af2f6dd93a1f8460405161225591906136a6565b60405180910390a45050565b6122f982826040516024016122779291906136fe565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612a92565b5050565b60006003600083815260200190815260200160002060060160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e308360036000878152602001908152602001600020600001546040518463ffffffff1660e01b81526004016123c193929190613601565b600060405180830381600087803b1580156123db57600080fd5b505af11580156123ef573d6000803e3d6000fd5b505050506003600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166003600084815260200190815260200160002060000154837f6091afcbe8514686c43b167ca4f1b03e24446d29d8490d496e438f8a2c76343984604051612487919061354e565b60405180910390a4600360008381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160146101000a81549060ff021916905560028201600090556003820160009055600482016000905560058201600090556006820160006101000a81549060ff02191690556006820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556007820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556008820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556009820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550505050565b600081836125ca9190613b51565b905092915050565b600081836125e09190613bd8565b905092915050565b600081836125f69190613ba7565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156127a457600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d836040518263ffffffff1660e01b815260040161268e91906139ce565b600060405180830381600087803b1580156126a857600080fd5b505af11580156126bc573d6000803e3d6000fd5b505050506126ca8383612abb565b61279f57600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b15801561273857600080fd5b505af115801561274c573d6000803e3d6000fd5b505050505061279e8383600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612ba79092919063ffffffff16565b5b6127d0565b6127cf83838373ffffffffffffffffffffffffffffffffffffffff16612ba79092919063ffffffff16565b5b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156128d45781341461284c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128439061386e565b60405180910390fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156128b657600080fd5b505af11580156128ca573d6000803e3d6000fd5b5050505050612a78565b600081905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401612914919061354e565b60206040518083038186803b15801561292c57600080fd5b505afa158015612940573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129649190613046565b90506129933330868573ffffffffffffffffffffffffffffffffffffffff16612c2d909392919063ffffffff16565b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016129ce919061354e565b60206040518083038186803b1580156129e657600080fd5b505afa1580156129fa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a1e9190613046565b905080612a3486846125bc90919063ffffffff16565b14612a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a6b906139ae565b60405180910390fd5b5050505b5050565b60008183612a8a9190613c32565b905092915050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1683600067ffffffffffffffff811115612b17577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612b495781602001600182028036833780820191505090505b50604051612b579190613537565b60006040518083038185875af1925050503d8060008114612b94576040519150601f19603f3d011682016040523d82523d6000602084013e612b99565b606091505b505090508091505092915050565b612c288363a9059cbb60e01b8484604051602401612bc6929190613638565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cb6565b505050565b612cb0846323b872dd60e01b858585604051602401612c4e93929190613601565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612cb6565b50505050565b6000612d18826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612d7d9092919063ffffffff16565b9050600081511115612d785780806020019051810190612d389190612ff4565b612d77576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d6e906138ce565b60405180910390fd5b5b505050565b6060612d8c8484600085612d95565b90509392505050565b606082471015612dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612dd19061376e565b60405180910390fd5b612de385612ea9565b612e22576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e19906138ae565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612e4b9190613537565b60006040518083038185875af1925050503d8060008114612e88576040519150601f19603f3d011682016040523d82523d6000602084013e612e8d565b606091505b5091509150612e9d828286612ebc565b92505050949350505050565b600080823b905060008111915050919050565b60608315612ecc57829050612f1c565b600083511115612edf5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f1391906136dc565b60405180910390fd5b9392505050565b600081359050612f32816142f6565b92915050565b600081519050612f47816142f6565b92915050565b600081359050612f5c8161430d565b92915050565b600081359050612f7181614324565b92915050565b600081519050612f8681614324565b92915050565b600081359050612f9b8161433b565b92915050565b600081519050612fb08161433b565b92915050565b600081359050612fc581614352565b92915050565b600060208284031215612fdd57600080fd5b6000612feb84828501612f38565b91505092915050565b60006020828403121561300657600080fd5b600061301484828501612f77565b91505092915050565b60006020828403121561302f57600080fd5b600061303d84828501612f8c565b91505092915050565b60006020828403121561305857600080fd5b600061306684828501612fa1565b91505092915050565b600080600080600080600060e0888a03121561308a57600080fd5b60006130988a828b01612f8c565b97505060206130a98a828b01612f23565b96505060406130ba8a828b01612f8c565b95505060606130cb8a828b01612f8c565b94505060806130dc8a828b01612f4d565b93505060a06130ed8a828b01612fb6565b92505060c06130fe8a828b01612f23565b91505092959891949750929550565b6000806040838503121561312057600080fd5b600061312e85828601612f8c565b925050602061313f85828601612f62565b9150509250929050565b6000806040838503121561315c57600080fd5b600061316a85828601612f8c565b925050602061317b85828601612f8c565b9150509250929050565b61318e81613cf9565b82525050565b61319d81613c78565b82525050565b6131ac81613c66565b82525050565b6131bb81613c8a565b82525050565b6131ca81613c96565b82525050565b60006131db82613b1f565b6131e58185613b35565b93506131f5818560208601613d2f565b80840191505092915050565b600061320c82613b2a565b6132168185613b40565b9350613226818560208601613d2f565b61322f81613dc0565b840191505092915050565b6000613247602783613b40565b915061325282613dd1565b604082019050919050565b600061326a601783613b40565b915061327582613e20565b602082019050919050565b600061328d602683613b40565b915061329882613e49565b604082019050919050565b60006132b0601483613b40565b91506132bb82613e98565b602082019050919050565b60006132d3603083613b40565b91506132de82613ec1565b604082019050919050565b60006132f6601f83613b40565b915061330182613f10565b602082019050919050565b6000613319602383613b40565b915061332482613f39565b604082019050919050565b600061333c601b83613b40565b915061334782613f88565b602082019050919050565b600061335f604083613b40565b915061336a82613fb1565b604082019050919050565b6000613382601583613b40565b915061338d82614000565b602082019050919050565b60006133a5603283613b40565b91506133b082614029565b604082019050919050565b60006133c8602683613b40565b91506133d382614078565b604082019050919050565b60006133eb601d83613b40565b91506133f6826140c7565b602082019050919050565b600061340e602a83613b40565b9150613419826140f0565b604082019050919050565b6000613431601883613b40565b915061343c8261413f565b602082019050919050565b6000613454602a83613b40565b915061345f82614168565b604082019050919050565b6000613477602d83613b40565b9150613482826141b7565b604082019050919050565b600061349a601f83613b40565b91506134a582614206565b602082019050919050565b60006134bd600f83613b40565b91506134c88261422f565b602082019050919050565b60006134e0602f83613b40565b91506134eb82614258565b604082019050919050565b6000613503603483613b40565b915061350e826142a7565b604082019050919050565b61352281613ce2565b82525050565b61353181613cec565b82525050565b600061354382846131d0565b915081905092915050565b600060208201905061356360008301846131a3565b92915050565b600060c08201905061357e60008301896131a3565b61358b6020830188613185565b6135986040830187613185565b6135a56060830186613519565b6135b26080830185613519565b6135bf60a08301846131a3565b979650505050505050565b60006060820190506135df60008301866131a3565b6135ec6020830185613185565b6135f96040830184613519565b949350505050565b600060608201905061361660008301866131a3565b61362360208301856131a3565b6136306040830184613519565b949350505050565b600060408201905061364d60008301856131a3565b61365a6020830184613519565b9392505050565b600060808201905061367660008301876131a3565b6136836020830186613519565b61369060408301856131b2565b61369d60608301846131b2565b95945050505050565b60006020820190506136bb60008301846131b2565b92915050565b60006020820190506136d660008301846131c1565b92915050565b600060208201905081810360008301526136f68184613201565b905092915050565b600060408201905081810360008301526137188185613201565b90506137276020830184613519565b9392505050565b600060208201905081810360008301526137478161323a565b9050919050565b600060208201905081810360008301526137678161325d565b9050919050565b6000602082019050818103600083015261378781613280565b9050919050565b600060208201905081810360008301526137a7816132a3565b9050919050565b600060208201905081810360008301526137c7816132c6565b9050919050565b600060208201905081810360008301526137e7816132e9565b9050919050565b600060208201905081810360008301526138078161330c565b9050919050565b600060208201905081810360008301526138278161332f565b9050919050565b6000602082019050818103600083015261384781613352565b9050919050565b6000602082019050818103600083015261386781613375565b9050919050565b6000602082019050818103600083015261388781613398565b9050919050565b600060208201905081810360008301526138a7816133bb565b9050919050565b600060208201905081810360008301526138c7816133de565b9050919050565b600060208201905081810360008301526138e781613401565b9050919050565b6000602082019050818103600083015261390781613424565b9050919050565b6000602082019050818103600083015261392781613447565b9050919050565b600060208201905081810360008301526139478161346a565b9050919050565b600060208201905081810360008301526139678161348d565b9050919050565b60006020820190508181036000830152613987816134b0565b9050919050565b600060208201905081810360008301526139a7816134d3565b9050919050565b600060208201905081810360008301526139c7816134f6565b9050919050565b60006020820190506139e36000830184613519565b92915050565b6000610180820190506139ff600083018f613519565b613a0c602083018e6131a3565b613a19604083018d6131b2565b613a26606083018c613519565b613a33608083018b613519565b613a4060a083018a613519565b613a4d60c0830189613519565b613a5a60e0830188613528565b613a686101008301876131a3565b613a76610120830186613194565b613a84610140830185613194565b613a926101608301846131a3565b9d9c50505050505050505050505050565b600060c082019050613ab86000830189613519565b613ac56020830188613519565b613ad260408301876131a3565b613adf6060830186613185565b613aec6080830185613528565b613af960a08301846131a3565b979650505050505050565b6000602082019050613b196000830184613528565b92915050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b6000613b5c82613ce2565b9150613b6783613ce2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115613b9c57613b9b613d62565b5b828201905092915050565b6000613bb282613ce2565b9150613bbd83613ce2565b925082613bcd57613bcc613d91565b5b828204905092915050565b6000613be382613ce2565b9150613bee83613ce2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613c2757613c26613d62565b5b828202905092915050565b6000613c3d82613ce2565b9150613c4883613ce2565b925082821015613c5b57613c5a613d62565b5b828203905092915050565b6000613c7182613cc2565b9050919050565b6000613c8382613cc2565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000613d0482613d0b565b9050919050565b6000613d1682613d1d565b9050919050565b6000613d2882613cc2565b9050919050565b60005b83811015613d4d578082015181840152602081019050613d32565b83811115613d5c576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b7f43616e27742063616e63656c20616e2061756374696f6e206f6e63652069742760008201527f7320626567756e00000000000000000000000000000000000000000000000000602082015250565b7f4d7573742062652061756374696f6e2063757261746f72000000000000000000600082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f41756374696f6e206861736e277420626567756e000000000000000000000000600082015250565b7f43616e206f6e6c792062652063616c6c65642062792061756374696f6e20637260008201527f6561746f72206f722063757261746f7200000000000000000000000000000000602082015250565b7f4d7573742073656e64206174206c656173742072657365727665507269636500600082015250565b7f41756374696f6e206d75737420626520617070726f766564206279206375726160008201527f746f720000000000000000000000000000000000000000000000000000000000602082015250565b7f41756374696f6e2068617320616c726561647920737461727465640000000000600082015250565b7f4d7573742073656e64206d6f7265207468616e206c617374206269642062792060008201527f6d696e426964496e6372656d656e7450657263656e7461676520616d6f756e74602082015250565b7f41756374696f6e20646f65736e27742065786973740000000000000000000000600082015250565b7f53656e74204554482056616c756520646f6573206e6f74206d6174636820737060008201527f656369666965642062696420616d6f756e740000000000000000000000000000602082015250565b7f4d7573742062652061756374696f6e2063757261746f72206f7220746f6b656e60008201527f206f776e65720000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f41756374696f6e206861736e277420636f6d706c657465640000000000000000600082015250565b7f63757261746f7246656550657263656e74616765206d757374206265206c657360008201527f73207468616e2031303000000000000000000000000000000000000000000000602082015250565b7f43616c6c6572206d75737420626520617070726f766564206f72206f776e657260008201527f20666f7220746f6b656e20696400000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b7f41756374696f6e20657870697265640000000000000000000000000000000000600082015250565b7f746f6b656e436f6e747261637420646f6573206e6f7420737570706f7274204560008201527f524337323120696e746572666163650000000000000000000000000000000000602082015250565b7f546f6b656e207472616e736665722063616c6c20646964206e6f74207472616e60008201527f7366657220657870656374656420616d6f756e74000000000000000000000000602082015250565b6142ff81613c66565b811461430a57600080fd5b50565b61431681613c78565b811461432157600080fd5b50565b61432d81613c8a565b811461433857600080fd5b50565b61434481613ce2565b811461434f57600080fd5b50565b61435b81613cec565b811461436657600080fd5b5056fea26469706673582212200bb52c3763eedd0ac0b29df770635bdd710451e0ba328a73655eee53d28136e364736f6c63430008040033\";\n\nexport class AuctionHouse__factory extends ContractFactory {\n  constructor(signer?: Signer) {\n    super(_abi, _bytecode, signer);\n  }\n\n  deploy(\n    _weth: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): Promise<AuctionHouse> {\n    return super.deploy(_weth, overrides || {}) as Promise<AuctionHouse>;\n  }\n  getDeployTransaction(\n    _weth: string,\n    overrides?: Overrides & { from?: string | Promise<string> }\n  ): TransactionRequest {\n    return super.getDeployTransaction(_weth, overrides || {});\n  }\n  attach(address: string): AuctionHouse {\n    return super.attach(address) as AuctionHouse;\n  }\n  connect(signer: Signer): AuctionHouse__factory {\n    return super.connect(signer) as AuctionHouse__factory;\n  }\n  static readonly bytecode = _bytecode;\n  static readonly abi = _abi;\n  static createInterface(): AuctionHouseInterface {\n    return new utils.Interface(_abi) as AuctionHouseInterface;\n  }\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): AuctionHouse {\n    return new Contract(address, _abi, signerOrProvider) as AuctionHouse;\n  }\n}\n","export enum Networks {\n    MAINNET = 1,\n    ROPSTEN = 3,\n    RINKEBY = 4,\n    POLYGON = 137,\n    LOCAL = 31337\n}\n\nexport const SUPPORTED_NETWORKS = [\n    Networks.ROPSTEN,\n    Networks.LOCAL\n]","import { useWeb3React } from \"@web3-react/core\";\nimport { Networks } from \"../core/networks\";\nimport addresses from '../contracts/contract-address.json'\n\ntype KaoAddresses = {\n    KaoDao: string,\n    KaoMoji: string,\n    KaoToken: string,\n    WETH: string,\n    AuctionHouse: string,\n}\n\ntype AddressBook = {\n    [network: string]: KaoAddresses,\n}\n\n\nexport function useAddresses (): KaoAddresses{\n    const { chainId } = useWeb3React()\n    const network =  chainId && Networks[chainId] ? Networks[chainId] : \"Invalid Network\"\n    return addresses && (addresses as AddressBook)[network.toLowerCase()]\n}","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { KaoDao__factory } from \"../contracts/factories/KaoDao__factory\";\nimport { KaoMoji__factory } from \"../contracts/factories/KaoMoji__factory\";\nimport { KaoToken__factory } from \"../contracts/factories/KaoToken__factory\";\nimport { AuctionHouse__factory } from \"../contracts/factories/AuctionHouse__factory\";\n\nimport { KaoDao } from \"../contracts/KaoDao\";\nimport { KaoMoji } from \"../contracts/KaoMoji\";\nimport { KaoToken } from \"../contracts/KaoToken\";\nimport { AuctionHouse } from \"../contracts/AuctionHouse\";\nimport { useAddresses } from \"./useAddresses\";\n\n\nexport function useContracts() {\n    const { connector, library, active } = useWeb3React()\n    const [contracts, setContracts] = useState<{ dao: KaoDao, moji: KaoMoji, token: KaoToken, auction: AuctionHouse }>()\n    const addresses = useAddresses()\n\n    const getKaoDao = useMemo(() => async () => {\n        if (!active || !connector || !library || !addresses) return\n        const account = await connector?.getAccount()\n        const signer = library && await library.getSigner(account).connectUnchecked()\n\n        const dao = KaoDao__factory.connect(addresses.KaoDao, signer);\n        const moji = KaoMoji__factory.connect(addresses.KaoMoji, signer);\n        const token = KaoToken__factory.connect(addresses.KaoToken, signer);\n        const auction = AuctionHouse__factory.connect(addresses.AuctionHouse, signer);\n\n        setContracts({ dao, moji, token, auction })\n\n    }, [connector, library, active, addresses])\n\n    useEffect(() => {\n        getKaoDao()\n    }, [connector, library, getKaoDao])\n\n\n    return contracts\n}","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { Signer } from \"ethers\";\n\nexport function useSigner() {\n    const { connector, library, active } = useWeb3React()\n    const [signer, setSigner] = useState<Signer>()\n\n    const getSigner = useMemo(() => async () => {\n\n        const account = await connector?.getAccount()\n        const signer = library && await library.getSigner(account)//.connectUnchecked()\n\n        setSigner(signer)\n\n    }, [connector, library])\n\n    useEffect(() => {\n        getSigner()\n    }, [getSigner, connector, library, active])\n\n\n    return signer\n}","import { BigNumber, formatFixed } from \"@ethersproject/bignumber\"\nimport { useWeb3React } from \"@web3-react/core\"\nimport { useEffect, useState } from \"react\"\nimport { useContracts } from \"../../hooks/useContracts\"\nimport { useSigner } from \"../../hooks/useSigner\"\nimport './balance.css'\n\nexport default function Balance() {\n    const contracts = useContracts()\n    const { account } = useWeb3React()\n    const signer = useSigner()\n    const [balance, setBalance] = useState<{ kao?: BigNumber, eth?: BigNumber }>()\n\n\n\n    useEffect(() => {\n        const getBalance = async () => {\n            const address = await signer?.getAddress()\n            if (!address) return\n            const kaoBalance = await contracts?.token.balanceOf(address)\n            const ethBalance = await signer?.getBalance()\n            setBalance({\n                kao: kaoBalance,\n                eth: ethBalance\n            })\n        }\n\n        getBalance()\n        //const filter = contracts?.token.filters[\"Transfer(address,address,uint256)\"]\n        contracts?.token.on(\"Transfer(address,address,uint256)\", getBalance)\n        return () => {\n            contracts?.token.off(\"Transfer(address,address,uint256)\", getBalance)\n        }\n    }, [contracts, signer, account])\n\n    const format = (value: BigNumber) => {\n        if (!value) return value\n        const parts = formatFixed(value, 18).split('.')\n\n        return `${parts[0]}.${(parts[1] ?? '').substr(0, 4)}`\n    }\n\n    return (\n        <div className=\"balanceContainer\">\n            <div className={'kaoBalance'}>\n                {balance?.kao ? format(balance.kao) : '--'} KAO\n            </div>\n            <div>\n                {balance?.eth ? format(balance.eth) : '--'} ETH\n            </div>\n        </div>\n    )\n}","import { useState } from 'react'\nimport './index.scss'\n\ntype ButtonProps = {\n    children: any\n    onClick: () => void | Promise<void>\n    disabled?: boolean\n    className?: string\n    lineHeight?: number\n}\n\nexport default function Button(props: ButtonProps) {\n    const [clicking, setClicking] = useState(false)\n\n    const onClick = async () => {\n        if (clicking || props.disabled) return\n        setClicking(true)\n        try {\n            const result = props.onClick()\n            if (result && typeof result.then === 'function') {\n                await result\n            }\n            setClicking(false)\n        } catch (ex: any) {\n            setClicking(false)\n            throw ex\n        }\n\n    }\n\n    return (\n        <button\n            disabled={props.disabled}\n            style={{ lineHeight: props.lineHeight ?? '1.5' }}\n            className={\"button white-shadow-1 \" + (props.className ?? '') + (clicking ? ' clicking' : \"\")} onClick={onClick}\n        >\n            {props.children}\n\n            { clicking && <><span className=\"dot one\">.</span><span className=\"dot two\">.</span><span className=\"dot three\">.</span></> }\n        </button>\n    )\n}","import { useWeb3React } from '@web3-react/core'\nimport { InjectedConnector } from '@web3-react/injected-connector'\nimport { useMemo } from 'react'\nimport Button from '../../components/button'\nimport { Networks, SUPPORTED_NETWORKS } from '../../core/networks'\n\n\n\nconst injected = new InjectedConnector({\n    supportedChainIds: SUPPORTED_NETWORKS\n})\n\nexport default function Connect() {\n    const { activate, active, deactivate, account, chainId } = useWeb3React()\n    const connect = async () => {\n        try {\n            await activate(injected)\n        } catch {\n            await deactivate()\n        }\n    }\n    const disconnect = async () => {\n        await deactivate()\n    }\n\n    const formattedAccount = useMemo(() => {\n        return `${account?.substr(0, 6)}...${account?.substr(account.length - 4, 4)}`\n    }, [account])\n\n    return (\n        <span style={{display: 'flex'}}>\n            {active && <div className=\"white-shadow-1\" style={{\n                padding: '0.25rem 0.75rem',\n                margin: '0 5px 5px 0px',\n                lineHeight: '0.75'\n            }}>\n                {chainId && Networks[chainId] ? Networks[chainId] : \"Invalid Network\"}\n            </div>}\n            <Button onClick={active ? disconnect : connect} lineHeight={0.75}>\n                {active ? \"Disconnect: \" + formattedAccount : \"Connect\"}\n            </Button>\n\n        </span>\n    )\n}","import { Link } from 'react-router-dom'\nimport Balance from './parts/balance'\nimport Connect from './parts/connect'\nimport './index.css'\n\nexport function Layout({ children }: { children: any }) {\n\n    return (\n        <div className=\"App\">\n            <header className=\"header\">\n                <nav>\n                    <Link to=\"/\">\n                        Home\n                    </Link>\n                    <Link to=\"/gallery\">\n                        Gallery\n                    </Link>\n                    <Link to=\"/proposals\">\n                        Proposals\n                    </Link>\n                    <Link to=\"/auctions\">\n                        Auction\n                    </Link>\n                    <Link to=\"/buy\">\n                        Buy KAO\n                    </Link>\n                </nav>\n                <Balance />\n\n                <Connect />\n            </header>\n            <main style={{\n                display: 'flex',\n                justifyContent: 'center'\n            }}>\n                {children}\n            </main>\n        </div>\n    )\n}","import './index.scss'\n\nexport default function Container({ children, style }: { style?: React.CSSProperties, children: any }) {\n    return (\n        <div className={\"container\"}\n        style={style}\n        >\n            {children}\n        </div>\n    )\n}","import { KaoMojiItem, useEnhanceKaoMoji } from \"../../hooks/useKaoMoji\";\nimport Container from \"../container\";\n\nexport function KaoMojiFrame({ data }: { data?: string }) {\n\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'center',\n                padding: '1rem'\n            }}\n        >\n            <Container style={{\n                backgroundColor: '#282828',\n                textAlign: 'center',\n                marginBottom: 'inherit',\n                boxShadow: 'none'\n            }}>\n                {data}\n            </Container>\n        </div >\n\n    )\n}\n\nexport function KaoMojiCard({ item }: { item: KaoMojiItem }) {\n    const kao = useEnhanceKaoMoji(item)\n\n    return (\n        <Container style={{\n            width: '250px',\n            height: '230px'\n        }}>\n            <div>#{item.id.toString()}</div>\n            <KaoMojiFrame data={kao.data} />\n        </Container>\n\n    )\n}\n\n\n\n","import { ethers } from \"ethers\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useContracts } from \"./useContracts\";\nimport { KaoMojiId } from \"./useKaoMojis\";\nimport { useSigner } from \"./useSigner\";\n\nexport type KaoMojiItem = KaoMojiId & {\n    owned?: boolean\n    data?: string\n}\n\nexport function useEnhanceKaoMoji(item: KaoMojiId) {\n    const contracts = useContracts()\n    const signer = useSigner()\n    const [kaoMoji, setKaoMoji] = useState<KaoMojiItem>({\n        id: item.id,\n        owner: item.owner\n    })\n\n    const getData = useCallback(async () => {\n        const account = await signer?.getAddress()\n        if (!account) return\n        const owned = (await contracts?.moji.ownerOf(item.id))?.toLowerCase() === account.toLowerCase()\n        const bytesToData = await contracts?.moji.getDataOf(item.id) ?? 'no data'\n        const data = ethers.utils.toUtf8String(bytesToData)\n        setKaoMoji({\n            ...kaoMoji,\n            owned,\n            data\n        })\n    }, [contracts?.moji, item.id, kaoMoji, signer])\n\n    useEffect(() => {\n        getData()\n    }, [getData])\n\n    return kaoMoji\n}","import { BigNumber, ethers } from \"ethers\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useContracts } from \"./useContracts\";\nimport { useSigner } from \"./useSigner\";\n\nexport type KaoMojiId = {\n    id: BigNumber\n    owner: string\n}\n\nexport default function useKaoMojis(ownedOnly: boolean) {\n    const [kaomojis, setKaomojis] = useState<KaoMojiId[]>([])\n    const contracts = useContracts()\n    const signer = useSigner()\n\n    const getKaoDao = useMemo(() => async () => {\n        if (!contracts) return\n        if (ownedOnly && !signer) return\n\n        const address = await signer?.getAddress()\n\n        const filter = contracts.moji?.filters?.Transfer(ownedOnly ? undefined : ethers.constants.AddressZero)\n        if (filter) {\n            const tokens: { id: BigNumber, owner: string }[] = (await contracts.moji?.queryFilter(filter))\n                .sort((a, b) => a.blockNumber - b.blockNumber)\n                .reduce((items: any[], x) => {\n                    const item = x.args\n                    const index = items.findIndex(x => x.id.toString() === item.tokenId.toString())\n                    if (index < 0)\n                        items.push({\n                            id: item.tokenId,\n                            owner: item.to\n                        })\n                    else {\n                        items[index].owner = item.to\n                    }\n\n                    return items\n                }, [])\n\n            if (ownedOnly ) {\n                setKaomojis(tokens.filter(x => x.owner.toLowerCase() === address?.toLowerCase()))\n            }\n            else {\n                setKaomojis(tokens)\n            }\n\n        }\n\n    }, [contracts, ownedOnly, signer])\n\n    useEffect(() => {\n        getKaoDao()\n    }, [contracts, getKaoDao])\n\n    return kaomojis\n}","import './index.scss'\nexport function Logo() {\n\n    return <h1\n        className=\"logo\"\n        style={{\n            fontWeight: 'normal',\n            fontSize: '6rem',\n            textAlign: 'center'\n        }}>\n        Eth Moji\n    </h1>;\n}\n","import { KaoMojiCard } from \"../components/kaomoji\"\nimport useKaoMojis from \"../hooks/useKaoMojis\"\nimport { Logo } from \"../components/logo\"\n\nexport default function HomePage() {\n    const kaoMojis = useKaoMojis(true)\n    \n    return (\n        <div>\n            <Logo />\n            <br />\n            <div style={{\n                display: 'flex'\n            }}>\n                {\n                    kaoMojis.map(x => (<KaoMojiCard key={x.id.toString()} item={x} />))\n                }\n            </div>\n        </div>\n    )\n}\n\n\n","import { useEffect, useState } from \"react\";\nimport { useProvider } from \"./useProvider\";\n\n\nexport function useBlockNumber() {\n    const provider = useProvider()\n    const [currentBlockNumber, setCurrentBlockNumber] = useState<number>()\n\n\n\n    useEffect(() => {\n        const updateBlockNumber = async (block: number) => {\n            setCurrentBlockNumber(block)\n        }\n        (async () => {\n            if (provider) {\n                const latestBlock = await provider.getBlockNumber()\n                if (latestBlock !== currentBlockNumber)\n                    updateBlockNumber(latestBlock)\n            }\n        })()\n\n        provider?.on('block', updateBlockNumber)\n        return () => {\n            provider?.off('block', updateBlockNumber)\n        }\n    }, [provider, currentBlockNumber])\n\n\n    return currentBlockNumber\n}","import { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { providers } from \"ethers\";\n\n\nexport function useProvider() {\n    const { library } = useWeb3React()\n    const [provider, setProvider] = useState<providers.Provider>()\n\n    const getProvider = useMemo(() => async () => {\n        \n        // const provider = await connector?.getProvider();\n        // if (!provider) return\n\n        setProvider(library)\n\n    }, [library])\n\n    useEffect(() => {\n        getProvider()\n    }, [library, getProvider])\n\n\n    return provider\n}","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { ethers } from \"ethers\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Button from \"../../../../components/button\";\nimport Container from \"../../../../components/container\";\nimport { KaoMojiFrame } from \"../../../../components/kaomoji\";\nimport { useBlockNumber } from \"../../../../hooks/useBlockNumber\";\nimport { useContracts } from \"../../../../hooks/useContracts\";\nimport { Proposal } from \"../../../../hooks/useProposals\";\nimport { useSigner } from \"../../../../hooks/useSigner\";\nimport './index.scss'\n\n// FROM IGovernor\nenum ProposalState {\n    Pending,\n    Active,\n    Canceled,\n    Defeated,\n    Succeeded,\n    Queued,\n    Expired,\n    Executed\n}\n\nenum VoteType {\n    Against,\n    For,\n    Abstain\n}\n\nexport default function ProposalItem({ proposal }: { proposal: Proposal }): JSX.Element {\n\n    const contracts = useContracts()\n    const provider = useSigner()\n    const currentBlockNumber = useBlockNumber()\n    const [voted, setVoted] = useState<boolean>()\n    const [proposalState, setProposalState] = useState<ProposalState>()\n    const [votes, setVotes] = useState<{ againstVotes: BigNumber, forVotes: BigNumber, abstainVotes: BigNumber }>()\n\n    const vote = async (support: VoteType) => {\n        if (!contracts) return\n\n        try {\n            const castTx = await contracts.dao.castVote(proposal.proposalId, support)\n            await castTx.wait()\n\n        }\n        catch (ex: any) {\n            console.error(ex?.data?.message ?? ex.message)\n        }\n    }\n\n    const hasVoted = useCallback(async (currentBlockNumber?: number) => {\n        if (!contracts || !currentBlockNumber) return\n        const account = await provider?.getAddress()\n\n        if (!account) return\n\n        const hasVoted = await contracts.dao.hasVoted(proposal.proposalId, account)\n        setVoted(hasVoted)\n\n        const state = await contracts.dao.state(proposal.proposalId) as ProposalState\n        setProposalState(state)\n\n        const { againstVotes, forVotes, abstainVotes } = await contracts.dao.proposalVotes(proposal.proposalId)\n        setVotes({ againstVotes, forVotes, abstainVotes })\n    }, [contracts, provider, proposal, currentBlockNumber])\n\n    const execute = async () => {\n        if (!contracts) return\n        const descriptionHash = ethers.utils.keccak256(ethers.utils.toUtf8Bytes(proposal.description))\n        // TODO: For some reason values comes empty array in the prop\n        const executionTx = await contracts.dao.execute(\n            proposal.targets,\n            (proposal as any)[3],\n            proposal.calldatas,\n            descriptionHash\n        )\n        await executionTx.wait()\n    }\n\n\n    const getProposalVotes = useCallback(async () => {\n        if (!contracts) return\n        // const filter = contracts.dao?.filters?.VoteCast()\n        // if (filter) {\n        //     const votesList = (await contracts.dao?.queryFilter(filter))//.filter(x => x.proposalId == proposal.proposalId)\n        //     if (votesList.length > 0)\n        //         console.log(votesList)\n        //     // setProposals(proposalsResult?.map((x) => ({\n        //     //     ...x.args\n        //     // })) ?? [])\n        // }\n    }, [contracts])\n\n    useEffect(() => {\n        hasVoted(currentBlockNumber)\n        getProposalVotes()\n    }, [hasVoted, getProposalVotes, provider, contracts, currentBlockNumber])\n\n    const ProposalStateComponent = (currentBlockNumber?: number, state?: ProposalState) => {\n        if (currentBlockNumber && proposal.startBlock.gt(currentBlockNumber))\n            return <div>Starts in {currentBlockNumber && proposal.startBlock.sub(currentBlockNumber).toString()} blocks</div>\n        if (currentBlockNumber && state === ProposalState.Active)\n            return <div>Voting ends in {proposal.endBlock.sub(currentBlockNumber).toString()} blocks</div>\n        if (currentBlockNumber && proposal.endBlock.lt(currentBlockNumber))\n            return <div>Ended  {proposal.endBlock.sub(currentBlockNumber).toString()} blocks ago</div>\n        return null\n    }\n    \n    return (\n        <Container>\n            {/* <div>{proposalState}</div>\n            <div>{proposal.startBlock.toString()}</div>\n            <div>{currentBlockNumber}</div> */}\n            <div>Proposal: {proposal.proposalId.toString().substring(0, 5)}...{proposal.proposalId.toString().substr(proposal.proposalId.toString().length - 5, 5)}</div>\n            {/* <div>{proposal.proposer.toString()}</div> */}\n            <div style={{\n                padding: '1rem',\n                fontSize: '2rem',\n                textAlign: 'center'\n            }}>\n                <KaoMojiFrame data={proposal.description.toString()} />\n            </div>\n            {ProposalStateComponent(currentBlockNumber, proposalState)}\n            <br />\n            {(proposalState === ProposalState.Active) &&\n                <div className={'voteOptions'}>\n                    <Button disabled={voted} onClick={() => vote(VoteType.For)}>d=====(￣▽￣*)b</Button><br />\n                    <Button disabled={voted} onClick={() => vote(VoteType.Against)}>(╯°□°）╯︵ ┻━┻</Button><br />\n                    <Button disabled={voted} onClick={() => vote(VoteType.Abstain)}>(°ー°〃)</Button>\n                </div>\n            }\n\n            {\n                proposalState === ProposalState.Defeated && 'Rejected ಥ_ಥ'\n            }\n\n            {\n                proposalState === ProposalState.Succeeded &&\n                <Button onClick={execute}>Execute</Button>\n            }\n\n            {\n                proposalState === ProposalState.Queued && 'QUEUED'\n            }\n\n            {\n                proposalState === ProposalState.Executed && 'EXECUTED'\n            }\n\n            {\n                votes && (<div>\n                    <div>For: {ethers.utils.formatUnits(votes.forVotes.toString(), 18)}</div>\n                    <div>Against: {ethers.utils.formatUnits(votes.againstVotes.toString(), 18)}</div>\n                    <div>Abstain: {ethers.utils.formatUnits(votes.abstainVotes.toString(), 18)}</div>\n                </div>)\n            }\n        </Container>\n    )\n}","import { useRef, useEffect, useCallback, useState } from 'react';\nimport './input.scss'\n\nexport function Input(props: {\n    value: string;\n    onChange: (value: string) => void;\n    placeholder: string;\n    type: \"text\" | \"number\",\n    readonly?: boolean\n}) {\n    const [value, setValue] = useState(props.value)\n\n    const debounce = useDebounce((newValue: string) => {\n        // setValue(newValue)\n        props.onChange(newValue)\n    }, 1000)\n\n    useEffect(() => {\n        if (props.value !== value)\n            setValue(props.value)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.value])\n\n    return <input className={'input'}\n        readOnly={props.readonly}\n        value={value}\n        type={props.type}\n        onChange={(e) => {\n\n            setValue(e.target.value)\n            debounce(e.target.value)\n            //props.onChange(e.target.value)\n            //e.preventDefault();\n        }} placeholder={props.placeholder} />;\n}\n\n\n\nconst useDebounce = <F extends (...args: any) => any>(\n    func: F,\n    waitFor: number,\n): ((...args: Parameters<F>) => ReturnType<F>) => {\n    const timer = useRef<NodeJS.Timer | null>();\n    const savedFunc = useRef<F | null>(func);\n\n    useEffect(() => {\n        savedFunc.current = func;\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [waitFor]);\n\n    return useCallback((...args: any) => {\n        if (timer.current) {\n            clearTimeout(timer.current);\n            timer.current = null;\n        }\n\n        timer.current = setTimeout(() => savedFunc.current?.(...args), waitFor);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []) as (...args: Parameters<F>) => ReturnType<F>;\n};\n\n","import { ethers } from \"ethers\"\nimport { useContracts } from \"../../../../hooks/useContracts\"\nimport { useState } from \"react\"\nimport Button from \"../../../../components/button\"\nimport \"../../../../components/input/index\"\nimport { useSigner } from \"../../../../hooks/useSigner\"\nimport { Input } from \"../../../../components/input\"\nimport { useAddresses } from \"../../../../hooks/useAddresses\"\n\nexport default function Propose() {\n    const contracts = useContracts()\n    const signer = useSigner()\n    const addresses = useAddresses()\n    const [proposalData, setProposalData] = useState<string>('')\n\n    const selfDelegate = async () => {\n        const account = await signer?.getAddress()\n        if (!account) throw new Error('Not connected')\n        contracts?.token.delegate(account)\n    }\n\n    const proposeKao = async () => {\n        // const delay = () => new Promise(function (resolve) {\n        //     setTimeout(resolve, 50000);\n        // })\n\n        // await delay()\n        // if (1 - 1 === 0) return\n        if (!proposalData || proposalData.length < 0) throw new Error(\"Invalid proposal value\")\n\n        const data = ethers.utils.toUtf8Bytes(proposalData)\n        const callData = contracts?.moji.interface.encodeFunctionData('mint', [data])\n\n        if (!callData) throw new Error('Could not create proposal')\n\n        try {\n            const tx = await contracts?.dao.propose([addresses.KaoMoji], [0], [callData], proposalData)\n            await tx?.wait()\n        }\n        catch (ex: any) {\n            console.error(ex?.data?.message ?? ex.message)\n        }\n    }\n\n    // Check if holding tokens but voting power is zero to show the self delegate button\n    return (\n        <div style={{\n            margin: '0 calc(0.5rem + 0px)',\n            display: 'flex'\n        }}>\n            <Input value={proposalData} onChange={setProposalData} placeholder={'ಠ╭╮ಠ'} type=\"text\" />\n            <Button onClick={proposeKao} >Propose Kao</Button>\n            <Button onClick={selfDelegate} >SelfDelegate</Button>\n        </div>\n    )\n\n\n}\n\n","import ProposalItem from \"./parts/item\";\nimport useProposals from \"../../hooks/useProposals\";\nimport Propose from './parts/propose';\n\nexport default function ProposalsPage() {\n    const proposals = useProposals()\n\n    return (\n        <div style={{\n            maxWidth: '600px',\n            minWidth: '600px',\n        }}>\n            <h1>\n                Proposals\n            </h1>\n            <Propose />\n            <br />\n            <section>\n                {\n                    proposals.map(x => <ProposalItem key={x.proposalId.toString()} proposal={x} />)\n                }\n            </section>\n        </div>\n    )\n}","import { BigNumber } from \"ethers\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useContracts } from \"./useContracts\";\n\nexport type Proposal = {\n    proposalId: BigNumber;\n    proposer: string;\n    targets: string[];\n    values: BigNumber[];\n    signatures: string[];\n    calldatas: string[];\n    startBlock: BigNumber;\n    endBlock: BigNumber;\n    description: string;\n}\n\n\nexport default function useProposals() {\n    const [proposals, setProposals] = useState<Proposal[]>([])\n    const contracts = useContracts()\n    const getKaoDao = useMemo(() => async () => {\n        if (!contracts) return\n        const filter = contracts.dao?.filters?.ProposalCreated()\n        if (filter) {\n            const proposalsResult = await contracts.dao?.queryFilter(filter)\n            const proposals: Proposal[] = proposalsResult?.map((x) => ({\n                ...x.args\n            })) ?? []\n\n\n            setProposals(proposals.sort((a, b) => b?.startBlock.toNumber() - a?.startBlock?.toNumber()))\n        }\n\n    }, [contracts])\n\n    const subscribeToProposalCreated = useCallback(() => {\n        getKaoDao()\n        contracts?.dao.on('ProposalCreated', getKaoDao)\n        return () => {\n            contracts?.dao.off('ProposalCreated', getKaoDao)\n        }\n    }, [contracts, getKaoDao])\n\n    useEffect(() => {\n        return subscribeToProposalCreated()\n    }, [contracts, subscribeToProposalCreated])\n\n    return proposals\n}","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\nimport { ethers } from \"ethers\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Button from \"../../components/button\";\nimport Container from \"../../components/container\";\nimport { Input } from \"../../components/input\";\nimport { KaoMojiFrame } from \"../../components/kaomoji\";\nimport useAuctions, { Auction } from \"../../hooks/useAuctions\";\nimport { useContracts } from \"../../hooks/useContracts\";\nimport { KaoMojiItem } from \"../../hooks/useKaoMoji\";\nimport { useSigner } from \"../../hooks/useSigner\";\n\nexport default function Auctions() {\n    const auctions = useAuctions()\n\n\n    return (\n        <div style={{\n            maxWidth: '600px',\n            minWidth: '600px',\n        }}>\n            <h3>\n                Auctions\n            </h3>\n            <br />\n            <section>\n                {\n                    auctions.map((a) => (<AuctionItem key={a.auctionId?.toString()} auction={a} />))\n                }\n            </section>\n        </div>\n    )\n}\n\ntype CurrentAuction = Auction & { isSelf?: boolean }\n\nfunction AuctionItem(props: { auction: Auction }): JSX.Element {\n    const [auction, setAuction] = useState<CurrentAuction>(props.auction)\n    const contracts = useContracts()\n    const signer = useSigner()\n    const [bidAmount, setBidAmount] = useState<BigNumber>()\n    const [allowance, setAllowance] = useState<BigNumber>()\n    const [kaomoji, setKaomoji] = useState<KaoMojiItem>()\n\n    const nowTimeStamp = BigNumber.from(Math.round((Date.now() / 1000)))\n    const endOfAuction = auction?.firstBidTime?.eq(0) ? undefined : auction?.firstBidTime?.add(auction.duration)\n    const started = auction?.firstBidTime?.eq(0) || (endOfAuction && nowTimeStamp.lt(endOfAuction))\n    const ended = auction?.firstBidTime?.gt(0) && (endOfAuction && nowTimeStamp.gt(endOfAuction))\n\n    const getAuction = useCallback(async () => {\n        const auctionData = await contracts?.auction.auctions(props.auction.auctionId)\n        const account = await signer?.getAddress()\n        if (!account || !auctionData) return\n\n        //const kaoFilter = contracts?.moji?.filters?.Transfer(ethers.constants.AddressZero, undefined, auctionData.tokenId)\n        const tokenData = await contracts?.moji.getDataOf(auctionData.tokenId)\n        // const kao = (await contracts?.moji?.queryFilter(kaoFilter))?.map(x=>x.args)?.find(x => x.tokenId.toString().toLowerCase() == auctionData.tokenId?.toString().toLowerCase())\n        // tokenId: auctionData?.tokenId ?? BigNumber.from('0'),\n        // tokenContract: auctionData?.tokenContract ?? ''\n        setKaomoji({\n            id: auctionData.tokenId,\n            data: tokenData,\n            owner: ''\n        })\n        setAuction({\n            ...auction,\n            amount: auctionData?.amount ?? BigNumber.from('0'),\n            firstBidTime: auctionData?.firstBidTime ?? BigNumber.from('0'),\n            bidder: auctionData?.bidder,\n            isSelf: auctionData.bidder?.toLowerCase() === account.toLowerCase()\n        })\n\n    }, [signer, auction, contracts, props.auction.auctionId])\n\n    const getAllowance = useCallback(async () => {\n        const account = await signer?.getAddress()\n        if (!account) return\n\n        const allowance = await contracts?.token.allowance(account, contracts.auction.address)\n        setAllowance(allowance)\n    }, [signer, contracts])\n\n    useEffect(() => {\n        getAuction()\n        getAllowance()\n    }, [signer, getAuction, getAllowance])\n\n    const placeBid = async () => {\n        if (!bidAmount) return\n\n        const tx = await contracts?.auction.createBid(auction.auctionId, bidAmount)\n        await tx?.wait()\n    }\n\n    const increaseAllowance = async () => {\n        const account = await signer?.getAddress()\n        if (!account || !bidAmount) return\n        const tx = await contracts?.token.increaseAllowance(contracts.auction.address, bidAmount)\n        await tx?.wait()\n    }\n\n    const claim = async () => {\n        const tx = await contracts?.auction.endAuction(auction.auctionId)\n        await tx?.wait()\n    }\n\n    return (\n        <Container>\n            <div>\n                Auction Id {auction.auctionId.toString()}\n            </div>\n            <div>\n                Token Id {auction.tokenId?.toString()}\n            </div>\n            {started && !ended && endOfAuction && <div>\n                Ends in {endOfAuction && endOfAuction.sub(nowTimeStamp).div(60).toString() + 'min'}\n            </div>}\n            {started && !ended && !endOfAuction && <div>\n                Waiting for the first bid to start the auction!\n            </div>}\n            {ended && <div>\n                Auction Ended!\n            </div>}\n            <div>\n                Amount {auction?.amount && formatUnits(auction.amount, 18)}\n            </div>\n\n            <div>\n                <KaoMojiFrame data={kaomoji?.data && ethers.utils.toUtf8String(kaomoji?.data)} />\n            </div>\n            {\n                auction && started &&\n                <div>\n                    <Input type={\"number\"}\n                        placeholder={auction && formatUnits(auction?.reservePrice.toString(), 18)}\n                        onChange={(x) => {\n                            try {\n                                if (x === '')\n                                    setBidAmount(undefined)\n                                else\n                                    setBidAmount(BigNumber.from(parseUnits(x, 18)))\n                            } catch { }\n                        }}\n                        value={bidAmount ? formatUnits(bidAmount?.toString(), 18) : \"\"} />\n                    {bidAmount && bidAmount?.gt(0) && allowance && allowance?.lt(bidAmount) && <Button onClick={increaseAllowance} >Increase allowance</Button>}\n                    {\n                        (!bidAmount || (bidAmount && allowance?.gte(bidAmount)))\n                        && <Button onClick={placeBid} disabled={!bidAmount || !bidAmount?.gt(0)} >Place Bid</Button>\n                    }\n                    <div style={{\n                        marginTop: '1rem',\n                        textAlign: 'center'\n                    }}>\n                        {auction?.isSelf === true && '( $ _ $ ) You are the top bidder'}\n                        {auction?.isSelf === false && 'ಠ╭╮ಠ You are not the top bidder'}\n                    </div>\n                </div>\n            }\n            {ended && auction?.isSelf && <Button onClick={claim} >Claim</Button>}\n        </Container>\n    )\n}\n","import { BigNumber } from \"ethers\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { useContracts } from \"./useContracts\";\n\nexport type Auction = {\n    auctionId: BigNumber\n    \n    tokenId: BigNumber\n    // Address for the ERC721 contract\n    tokenContract: string\n    // Whether or not the auction curator has approved the auction to start\n    approved: boolean\n    // The current highest bid amount\n    amount: BigNumber\n    // The length of time to run the auction for, after the first bid was made\n    duration: BigNumber\n    // The time of the first bid\n    firstBidTime: BigNumber\n    // The minimum price of the first bid\n    reservePrice: BigNumber\n    // The sale percentage to send to the curator\n    curatorFeePercentage: number\n    // The address that should receive the funds once the NFT is sold.\n    tokenOwner : string;\n    // The address of the current highest bid\n     bidder: string\n    // The address of the auction's curator.\n    // The curator can reject or approve an auction\n    curator: string\n    // The address of the ERC-20 currency to run the auction with.\n    // If set to 0x0, the auction will be run in ETH\n    auctionCurrency: string;\n}\n\n\nexport default function useAuctions() {\n    const [auctions, setAuctions] = useState<Auction[]>([])\n    const contracts = useContracts()\n    const getAuctions = useMemo(() => async () => {\n        if (!contracts) return\n\n        const filter = contracts.auction?.filters.AuctionCreated(null, null, contracts.moji.address)\n        if (filter) {\n            const auctionsResult = await contracts.auction?.queryFilter(filter)\n            const auctions: Auction[] = auctionsResult?.map((x) => ({\n                ...x.args\n            })) ?? []\n\n                \n            setAuctions(auctions.sort((a, b) => BigNumber.from(b?.firstBidTime ?? 0 ).sub(a?.firstBidTime ?? 0)?.toNumber()))\n        }\n\n    }, [contracts])\n\n    useEffect(() => {\n        getAuctions()\n    }, [contracts, getAuctions])\n\n    return auctions\n}","import Button from \"../button\";\nimport { useState } from \"react\";\n\nexport function Select<T>({ value, items, renderValue, renderSelectItem, onChange }: {\n    items: T[];\n    value: T;\n    onChange: (item: T) => void;\n    renderValue: (value: T) => React.ReactElement;\n    renderSelectItem: (item: T) => React.ReactElement;\n}) {\n    const [open, setOpen] = useState(false);\n\n    return (\n        <>\n            <Button className={open ? 'open active' : ''} onClick={items && items.length > 0 ? () => setOpen(!open) : () => { }}>\n\n                <div className={'selected-item'}>\n                    {renderValue(value)}\n                    ⛛\n                </div>\n\n                {open && (\n                    <div className=\"select-popup white-shadow-1\">\n                        {items.map((item, index) => (\n                            <div className={'select-popup-item'} key={`selector-key-${index}`} onClick={() => { onChange(item); setOpen(false); }}>\n                                {renderSelectItem(item)}\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </Button>\n\n        </>\n    );\n}\n","import { BigNumber } from \"ethers\"\nimport Button from \"../../components/button\"\nimport { useContracts } from \"../../hooks/useContracts\"\nimport { useSigner } from \"../../hooks/useSigner\"\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Input } from \"../../components/input\";\nimport './index.scss'\nimport { useWeb3React } from \"@web3-react/core\";\nimport { APIError, ParaSwap } from 'paraswap';\nimport { OptimalRate, SwapSide } from \"paraswap-core\";\nimport { Select } from \"../../components/select\";\nimport { Networks } from \"../../core/networks\";\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\n\ntype OperationToken = {\n    address: string\n    symbol: string\n    decimals: number\n    icon?: string\n}\n\n\ntype SwapOperation = {\n    optimalRate?: OptimalRate\n    error?: APIError\n}\n\nexport default function BuyKaoPage() {\n    const signer = useSigner()\n    const { active, chainId } = useWeb3React()\n    const contracts = useContracts()\n    const paraSwap = useMemo(() => (chainId && active) && Object.values(Networks).includes(chainId) ? new ParaSwap(chainId as any) : undefined, [active, chainId]);\n    const [sourceOperation, setSourceOperation] = useState<OperationToken>()\n    const [destinationOperation, setDestinationOperation] = useState<OperationToken>()\n    const [sourceAmount, setSourceAmount] = useState<BigNumber>()\n    const [destinationAmount, setDestinationAmount] = useState<BigNumber>()\n\n    const [operation, setOperation] = useState<SwapOperation>()\n    const [tokenList, setTokenList] = useState<OperationToken[]>([])\n\n    const swap = async () => {\n        const address = await signer?.getAddress()\n        if (!address || !paraSwap || !signer) return\n        if (!sourceOperation?.address || !destinationOperation?.address) return\n        if (!sourceAmount || !destinationAmount?.toString()) return\n        if (!operation?.optimalRate) return\n        if (operation?.error) return\n\n        const srcToken = sourceOperation.address;\n        const destToken = destinationOperation.address;\n        const srcAmount = sourceAmount.toString();\n        const destAmount = destinationAmount.toString();\n        const senderAddress = address;\n        const receiver = address;\n        const referrer = 'ethmoji';\n\n        const txParams = await paraSwap.buildTx(\n            srcToken,\n            destToken,\n            srcAmount,\n            destAmount,\n            operation.optimalRate,\n            senderAddress,\n            referrer,\n            receiver,\n        );\n\n        if ('message' in txParams) throw txParams\n\n        const tx = await signer.sendTransaction({\n            from: txParams.from,\n            to: txParams.to,\n            value: BigNumber.from(txParams.value),\n            gasPrice: BigNumber.from((txParams as any).gasPrice),\n            gasLimit: BigNumber.from((txParams as any).gas),\n            chainId: txParams.chainId,\n            data: txParams.data\n        });\n        await tx.wait()\n\n        setDestinationAmount(undefined)\n\n    }\n\n    const loadTokenList = useCallback(async () => {\n        const tokens = await paraSwap?.getTokens()\n\n        // ROPSTEN WETH: 0xc778417E063141139Fce010982780140Aa0cD5Ab\n\n\n        if (tokens && Array.isArray(tokens) && chainId) {\n            if (chainId === Networks.ROPSTEN) {\n                tokens.push({\n                    address: '0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C',\n                    decimals: 6,\n                    symbol: 'USDC',\n                    network: 3,\n                    tokenType: 'ERC20',\n                    connectors: [],\n                    mainConnector: '',\n                    img: 'https://assets.coingecko.com/coins/images/6319/small/USD_Coin_icon.png?1547042389'\n                })\n            }\n            setTokenList(tokens.map(x => ({\n                address: x.address,\n                symbol: x.symbol ?? 'No Symbol :/',\n                icon: x.img,\n                decimals: x.decimals\n            })))\n        } else {\n            setTokenList([])\n        }\n    }, [paraSwap, chainId])\n\n    useEffect(() => {\n        loadTokenList()\n    }, [paraSwap, chainId, loadTokenList])\n\n    const kaoToken = { address: contracts?.token.address ?? '', symbol: 'KAO', decimals: 18 }\n\n\n    const calculateRate = useCallback(async () => {\n        if (!sourceOperation?.address ||\n            !sourceAmount ||\n            !destinationOperation?.address ||\n            !paraSwap) return\n\n        const address = await signer?.getAddress()\n        if (!address) return\n        const priceRoute = await paraSwap?.getRate(\n            sourceOperation.address,\n            destinationOperation.address,\n            sourceAmount.toString(),\n            address,\n            SwapSide.SELL,\n            {\n                partner: 'ethmoji',\n                // maxUSDImpact: 100000000,\n                // maxImpact: 100,\n                includeDEXS: 'UniswapV2' //'Uniswap, Kyber, Bancor, Oasis, Compound, Fulcrum, 0x, MakerDAO, Chai, ParaSwapPool, Aave, Aave2, MultiPath, MegaPath, Curve, Curve3, Saddle, IronV2, BDai, idle, Weth, Beth, UniswapV2, Balancer, 0xRFQt, ParaSwapPool2, ParaSwapPool3, ParaSwapPool4, ParaSwapPool5, ParaSwapPool6, SushiSwap, LINKSWAP, Synthetix, DefiSwap, Swerve, CoFiX, Shell, DODOV1, DODOV2, OnChainPricing, PancakeSwap, PancakeSwapV2, ApeSwap, Wbnb, acryptos, streetswap, bakeryswap, julswap, vswap, vpegswap, beltfi, ellipsis, QuickSwap, COMETH, Wmatic, Nerve, Dfyn, UniswapV3, Smoothy, PantherSwap, OMM1, OneInchLP, CurveV2, mStable, WaultFinance, MDEX, ShibaSwap, CoinSwap, SakeSwap, JetSwap, Biswap, BProtocol'\n            },\n            sourceOperation.decimals,\n            destinationOperation.decimals\n        );\n\n\n        setOperation({\n            optimalRate: (priceRoute as OptimalRate).contractMethod ? priceRoute as any : undefined,\n            error: (priceRoute as APIError).message ? priceRoute as any : undefined\n        })\n\n        setDestinationAmount((priceRoute as OptimalRate)?.destAmount ? BigNumber.from((priceRoute as OptimalRate)?.destAmount) : undefined)\n\n    }, [sourceAmount, sourceOperation?.address, destinationOperation?.address, paraSwap, destinationOperation?.decimals, sourceOperation?.decimals, signer])\n\n    useEffect(() => {\n        calculateRate()\n    }, [sourceAmount, sourceOperation?.address, destinationOperation?.address, calculateRate])\n\n    function onSourceAmountChanged(value?: BigNumber) {\n        setSourceAmount(value)\n    }\n\n    function onDestinationAmountChanged(value?: BigNumber) {\n\n    }\n\n\n    function onSourceTokenSelected(selected?: OperationToken) {\n        // TODO: const allowance = await paraSwap.getAllowance(userAddress, tokenAddress);\n        // TODO: const txHash = await paraSwap.approveToken(amount, userAddress, tokenAddress);\n        if (sourceOperation?.address === selected?.address) return\n        setSourceOperation(selected)\n        if (kaoToken.address !== selected?.address) {\n            setDestinationOperation(kaoToken)\n        }\n    }\n\n    function onDestinationTokenSelected(selected?: OperationToken) {\n        if (destinationOperation?.address === selected?.address) return\n        setDestinationOperation(selected)\n        if (kaoToken.address !== selected?.address) {\n            setSourceOperation(kaoToken)\n        }\n    }\n\n    return (\n        <div style={{\n            maxWidth: '600px',\n            minWidth: '600px',\n        }}>\n            <h3>\n                Buy Kao (o゜▽゜)o☆\n            </h3>\n            <TokenItem token={sourceOperation} label={\"You pay\"} tokenList={tokenList} tokenSelected={(token) => onSourceTokenSelected(token)} amount={sourceAmount} amountChanged={(amount) => onSourceAmountChanged(amount)} />\n            <TokenItem token={destinationOperation} label={\"You'll receive\"} tokenList={tokenList} tokenSelected={(token) => onDestinationTokenSelected(token)} amount={destinationAmount} amountChanged={(amount) => onDestinationAmountChanged(amount)} readonly />\n\n            <div style={{\n                marginTop: '1rem'\n            }}>\n                <Button onClick={swap} disabled={!!operation?.error || !destinationAmount || destinationAmount.eq(0)} >\n                    Buy\n                </Button>\n                <span style={{\n                    marginLeft: '1rem'\n                }}>\n                    {operation?.error?.message}\n                </span>\n            </div>\n        </div>\n    )\n}\n\nfunction TokenItem({ token, label, tokenList, tokenSelected, amountChanged, amount, readonly }:\n    {\n        token?: OperationToken,\n        label: string,\n        tokenList: OperationToken[],\n        tokenSelected: (selected?: OperationToken) => void,\n        amount?: BigNumber,\n        amountChanged: (value?: BigNumber) => void\n        readonly?: boolean\n    }) {\n\n\n    return (<div className={'token-item-container'}>\n\n        <div style={{ width: '100%' }}>\n            {label}\n        </div>\n        <div className={'token-item'}>\n            <Input onChange={(value) => amountChanged(value ? BigNumber.from(parseUnits(value, token?.decimals ?? 18)) : undefined)}\n                placeholder={\"0\"} type={\"number\"}\n                value={amount ? formatUnits(amount.toString(), token?.decimals ?? 18) : ''}\n                readonly={readonly}\n            />\n            <Select\n                items={tokenList}\n                onChange={tokenSelected}\n                value={token}\n                renderValue={(value) => (\n                    <div className={'token-component'}>\n                        {value?.icon ? <img height={\"25\"} src={value.icon} alt={value.symbol} /> : <span>:D</span>}\n                        {value?.symbol.toUpperCase() ?? '---'}\n                    </div>\n                )}\n                renderSelectItem={(item) => (\n                    <div className={'token-component'}>\n                        {item?.icon ? <img height={\"25\"} src={item.icon} alt={item.symbol} /> : <span>:D</span>}\n                        {item?.symbol.toUpperCase() ?? '---'}\n                    </div>\n                )}\n            />\n        </div>\n    </div>)\n}\n\n","import { KaoMojiCard } from \"../../components/kaomoji\"\nimport useKaoMojis from \"../../hooks/useKaoMojis\"\n\nexport default function GalleryPage() {\n    const kaoMojis = useKaoMojis(false)\n\n    return (\n        <div>\n            <h1>Gallery</h1>\n            <br />\n            <div style={{\n                display: 'flex'\n            }}>\n                {\n                    kaoMojis.map(x => (<KaoMojiCard key={x.id.toString()} item={x} />))\n                }\n            </div>\n        </div>\n    )\n}\n\n\n","import { Web3ReactProvider } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport { Route, Switch, HashRouter } from 'react-router-dom'\nimport { Layout } from './layout'\nimport HomePage from './pages/home'\nimport ProposalsPage from './pages/proposals'\n\nimport './App.css'\nimport Auctions from './pages/auctions'\nimport BuyKaoPage from './pages/buy'\nimport GalleryPage from './pages/gallery'\n\nfunction getLibrary(provider: any, connector: any) {\n  return new ethers.providers.Web3Provider(provider)\n}\n\nexport default function App() {\n\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <HashRouter>\n        <Layout>\n          <Switch  >\n\n            <Route exact path=\"/\" >\n              <HomePage />\n            </Route>\n\n            <Route exact path=\"/gallery\" >\n              <GalleryPage />\n            </Route>\n\n            <Route exact path=\"/proposals\" >\n              <ProposalsPage />\n            </Route>\n\n            <Route exact path=\"/auctions\" >\n              <Auctions />\n            </Route>\n\n            <Route exact path=\"/buy\" >\n              <BuyKaoPage />\n            </Route>\n\n            <Route path=\"*\" >\n              404 ಥ_ಥ\n            </Route>\n          </Switch>\n        </Layout>\n      </HashRouter>\n    </Web3ReactProvider>\n  )\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}