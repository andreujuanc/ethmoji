{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x9E545E3C0baAB3E08CdfD552C960A1050f373042",
      "txHash": "0x58a1e15e15fb5c5cee508a137fc4cf65f730811535ac62daaea30404c2a2c339",
      "kind": "uups"
    },
    {
      "address": "0x1613beB3B2C4f22Ee086B2b38C1476A3cE7f78E8",
      "txHash": "0x78b6a8c41a92d8da36f0522995e4614d7acb4fbf15e65be29a8d428ce6d25f92",
      "kind": "uups"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x59495fb66908c4eafaf068694c4ba8912ea023f3fce5eaee6840151a4e54d893",
      "kind": "uups"
    },
    {
      "address": "0x1fA02b2d6A771842690194Cf62D91bdd92BfE28d",
      "txHash": "0x977c9485f23adee705e8fa6ed6684e4f7b3e3129f576f0aa5b388c5d1c8666eb",
      "kind": "uups"
    },
    {
      "address": "0x4C4a2f8c81640e47606d3fd77B353E87Ba015584",
      "txHash": "0xe0ce551c02de25b326406840154e09832bc0cff6bb8e92df72e97ba2ab77f595",
      "kind": "uups"
    },
    {
      "address": "0x21dF544947ba3E8b3c32561399E88B52Dc8b2823",
      "txHash": "0xaf8b6f7f9ac8f18764416ecaa1c4459507530abb33a2637078e49f9bdfae1c5b",
      "kind": "uups"
    },
    {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0x48454aadfa11eadfb18b919af912565c9a0ef9ff89530fe84e216fe3284b311b",
      "kind": "uups"
    }
  ],
  "impls": {
    "7b3d38ab481488d04ab7ce3cec1e3289a8765db4d43d0b932c8260bf9677cc03": {
      "address": "0x84eA74d481Ee0A5332c457a4d796187F6Ba67fEB",
      "txHash": "0x22e861f44a6a36d1de5d6b155cd0c73dcd476db921be1ec0f2035867e93270d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "KaoMoji",
            "label": "_tokenData",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/KaoMoji.sol:30"
          },
          {
            "contract": "KaoMoji",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/KaoMoji.sol:31"
          },
          {
            "contract": "KaoMoji",
            "label": "_auctionHouse",
            "type": "t_contract(IAuctionHouse)14988",
            "src": "contracts/KaoMoji.sol:32"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoToken",
            "type": "t_contract(KaoToken)13686",
            "src": "contracts/KaoMoji.sol:33"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoStaking",
            "type": "t_contract(KaoStaking)13509",
            "src": "contracts/KaoMoji.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAuctionHouse)14988": {
            "label": "contract IAuctionHouse"
          },
          "t_contract(KaoToken)13686": {
            "label": "contract KaoToken"
          },
          "t_contract(KaoStaking)13509": {
            "label": "contract KaoStaking"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "8e4bbf6fa1edc1a8a6b8281cd26f0dc9ead6c3a1ed28e80ffa4aa1e3506c0e43": {
      "address": "0xa82fF9aFd8f496c3d6ac40E2a0F282E47488CFc9",
      "txHash": "0xc3efb367aed4922a07bfda2ff5e9ce8449ae49520f0460c9baca253b58528fb8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "KaoStaking",
            "label": "stakingToken",
            "type": "t_contract(IERC20Upgradeable)3210",
            "src": "contracts/KaoStaking.sol:30"
          },
          {
            "contract": "KaoStaking",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/KaoStaking.sol:32"
          },
          {
            "contract": "KaoStaking",
            "label": "_balances",
            "type": "t_mapping(t_address,t_struct(Balance)12981_storage)",
            "src": "contracts/KaoStaking.sol:33"
          }
        ],
        "types": {
          "t_contract(IERC20Upgradeable)3210": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_struct(Balance)12981_storage)": {
            "label": "mapping(address => struct Balance)"
          },
          "t_address": {
            "label": "address"
          },
          "t_struct(Balance)12981_storage": {
            "label": "struct Balance",
            "members": [
              {
                "label": "raw",
                "type": "t_uint256"
              },
              {
                "label": "weightedTimestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4fda76628e3f8da9140cdade00b086aaa307943bdbae967b93a1726147272cd4": {
      "address": "0x851356ae760d987E095750cCeb3bC6014560891C",
      "txHash": "0x69662377f1ca089b8f7c00298ae6f7a216421eda9ecc1b44008bc9aec145e53c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "IGovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:221"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:39"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_proposals",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)452_storage)",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:41"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:346"
          },
          {
            "contract": "GovernorCountingSimpleUpgradeable",
            "label": "_proposalVotes",
            "type": "t_mapping(t_uint256,t_struct(ProposalVote)1526_storage)",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol:39"
          },
          {
            "contract": "GovernorCountingSimpleUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol:115"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "token",
            "type": "t_contract(ERC20VotesUpgradeable)3869",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:16"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:35"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "_quorumNumerator",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:15"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:57"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "KaoDao",
            "label": "_kaoMoji",
            "type": "t_contract(KaoMoji)12965",
            "src": "contracts/KaoDao.sol:27"
          },
          {
            "contract": "KaoDao",
            "label": "_staking",
            "type": "t_contract(KaoStaking)13509",
            "src": "contracts/KaoDao.sol:28"
          },
          {
            "contract": "KaoDao",
            "label": "_votingDelay",
            "type": "t_uint256",
            "src": "contracts/KaoDao.sol:29"
          },
          {
            "contract": "KaoDao",
            "label": "_votingPeriod",
            "type": "t_uint256",
            "src": "contracts/KaoDao.sol:30"
          }
        ],
        "types": {
          "t_contract(KaoMoji)12965": {
            "label": "contract KaoMoji"
          },
          "t_contract(KaoStaking)13509": {
            "label": "contract KaoStaking"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_contract(ERC20VotesUpgradeable)3869": {
            "label": "contract ERC20VotesUpgradeable"
          },
          "t_mapping(t_uint256,t_struct(ProposalVote)1526_storage)": {
            "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)"
          },
          "t_struct(ProposalVote)1526_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
            "members": [
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)"
              }
            ]
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)452_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)"
          },
          "t_struct(ProposalCore)452_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)6095_storage"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)6095_storage"
              },
              {
                "label": "executed",
                "type": "t_bool"
              },
              {
                "label": "canceled",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(BlockNumber)6095_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          }
        }
      }
    },
    "668ddef4d132973f8842cfb2ae6adb43d3347f12ab4bca8bd1dedb2c8cbdea31": {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0xefe9b621a286be84b951a7d6aff7114f4b859b6424b34953582270fcc10620ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "KaoMoji",
            "label": "_tokenData",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/KaoMoji.sol:30"
          },
          {
            "contract": "KaoMoji",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/KaoMoji.sol:31"
          },
          {
            "contract": "KaoMoji",
            "label": "_auctionHouse",
            "type": "t_contract(IAuctionHouse)14996",
            "src": "contracts/KaoMoji.sol:32"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoToken",
            "type": "t_contract(KaoToken)13694",
            "src": "contracts/KaoMoji.sol:33"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoStaking",
            "type": "t_contract(KaoStaking)13517",
            "src": "contracts/KaoMoji.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAuctionHouse)14996": {
            "label": "contract IAuctionHouse"
          },
          "t_contract(KaoToken)13694": {
            "label": "contract KaoToken"
          },
          "t_contract(KaoStaking)13517": {
            "label": "contract KaoStaking"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "7500c0d5b6dbfa38eb702f442cbc29d86c8c12f3f745cee4ada52416cb8833a6": {
      "address": "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
      "txHash": "0x4d0dcc8ed7b465539ba15aa3551020f5f357ea8b4606c758091a6e0d17570570",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "KaoMoji",
            "label": "_tokenData",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/KaoMoji.sol:30"
          },
          {
            "contract": "KaoMoji",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/KaoMoji.sol:31"
          },
          {
            "contract": "KaoMoji",
            "label": "_auctionHouse",
            "type": "t_contract(IAuctionHouse)14996",
            "src": "contracts/KaoMoji.sol:32"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoToken",
            "type": "t_contract(KaoToken)13694",
            "src": "contracts/KaoMoji.sol:33"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoStaking",
            "type": "t_contract(KaoStaking)13517",
            "src": "contracts/KaoMoji.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAuctionHouse)14996": {
            "label": "contract IAuctionHouse"
          },
          "t_contract(KaoToken)13694": {
            "label": "contract KaoToken"
          },
          "t_contract(KaoStaking)13517": {
            "label": "contract KaoStaking"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "b18bdfb2a1ebb90f8e61079107c501c2ae0f1ef50ea5de8adc4d13ca3b351c64": {
      "address": "0x7bc06c482DEAd17c0e297aFbC32f6e63d3846650",
      "txHash": "0x75498f0304fa59cc42674fc4429e07d05fd3ee045ff85a08a4b310a3499d5572",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "KaoMoji",
            "label": "_tokenData",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/KaoMoji.sol:30"
          },
          {
            "contract": "KaoMoji",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/KaoMoji.sol:31"
          },
          {
            "contract": "KaoMoji",
            "label": "_auctionHouse",
            "type": "t_contract(IAuctionHouse)15002",
            "src": "contracts/KaoMoji.sol:32"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoToken",
            "type": "t_contract(KaoToken)13700",
            "src": "contracts/KaoMoji.sol:33"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoStaking",
            "type": "t_contract(KaoStaking)13523",
            "src": "contracts/KaoMoji.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAuctionHouse)15002": {
            "label": "contract IAuctionHouse"
          },
          "t_contract(KaoToken)13700": {
            "label": "contract KaoToken"
          },
          "t_contract(KaoStaking)13523": {
            "label": "contract KaoStaking"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    },
    "f237b771afb1a552902f23e80fab001c9adcc63e58b7ffa0d98540ccf8a59390": {
      "address": "0x162A433068F51e18b7d13932F27e66a3f99E6890",
      "txHash": "0xedca84bc40b566a77dc44caca998a6b77dcccfce645d44f264fed360b85caace",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AuctionHouse",
            "label": "timeBuffer",
            "type": "t_uint256",
            "src": "contracts/zora/AuctionHouse.sol:38"
          },
          {
            "contract": "AuctionHouse",
            "label": "minBidIncrementPercentage",
            "type": "t_uint8",
            "src": "contracts/zora/AuctionHouse.sol:41"
          },
          {
            "contract": "AuctionHouse",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/zora/AuctionHouse.sol:44"
          },
          {
            "contract": "AuctionHouse",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(Auction)13926_storage)",
            "src": "contracts/zora/AuctionHouse.sol:47"
          },
          {
            "contract": "AuctionHouse",
            "label": "_auctionIdTracker",
            "type": "t_struct(Counter)5653_storage",
            "src": "contracts/zora/AuctionHouse.sol:51"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Auction)13926_storage)": {
            "label": "mapping(uint256 => struct IAuctionHouse.Auction)"
          },
          "t_struct(Auction)13926_storage": {
            "label": "struct IAuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContract",
                "type": "t_address"
              },
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "firstBidTime",
                "type": "t_uint256"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256"
              },
              {
                "label": "curatorFeePercentage",
                "type": "t_uint8"
              },
              {
                "label": "tokenOwner",
                "type": "t_address"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "curator",
                "type": "t_address_payable"
              },
              {
                "label": "auctionCurrency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(Counter)5653_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "57faebfcc921ace92d8fe6f5ddba58eabb96f69c809f74e1021cf50fc20d6d16": {
      "address": "0x5081a39b8A5f0E35a8D959395a630b68B74Dd30f",
      "txHash": "0xb7fc686755a3f0f8e2a07b7ea53cc45955d4866f90455b730d675978aba2c95a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "AuctionHouse",
            "label": "timeBuffer",
            "type": "t_uint256",
            "src": "contracts/zora/AuctionHouse.sol:38"
          },
          {
            "contract": "AuctionHouse",
            "label": "minBidIncrementPercentage",
            "type": "t_uint8",
            "src": "contracts/zora/AuctionHouse.sol:41"
          },
          {
            "contract": "AuctionHouse",
            "label": "wethAddress",
            "type": "t_address",
            "src": "contracts/zora/AuctionHouse.sol:44"
          },
          {
            "contract": "AuctionHouse",
            "label": "auctions",
            "type": "t_mapping(t_uint256,t_struct(Auction)13926_storage)",
            "src": "contracts/zora/AuctionHouse.sol:47"
          },
          {
            "contract": "AuctionHouse",
            "label": "_auctionIdTracker",
            "type": "t_struct(Counter)5653_storage",
            "src": "contracts/zora/AuctionHouse.sol:51"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(Auction)13926_storage)": {
            "label": "mapping(uint256 => struct IAuctionHouse.Auction)"
          },
          "t_struct(Auction)13926_storage": {
            "label": "struct IAuctionHouse.Auction",
            "members": [
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "tokenContract",
                "type": "t_address"
              },
              {
                "label": "approved",
                "type": "t_bool"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "duration",
                "type": "t_uint256"
              },
              {
                "label": "firstBidTime",
                "type": "t_uint256"
              },
              {
                "label": "reservePrice",
                "type": "t_uint256"
              },
              {
                "label": "curatorFeePercentage",
                "type": "t_uint8"
              },
              {
                "label": "tokenOwner",
                "type": "t_address"
              },
              {
                "label": "bidder",
                "type": "t_address_payable"
              },
              {
                "label": "curator",
                "type": "t_address_payable"
              },
              {
                "label": "auctionCurrency",
                "type": "t_address"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_struct(Counter)5653_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b20cf6bde9eed9d670c4f3cefeea84f1ba6a986e0a6ff67e5bf6fb997b2cf94a": {
      "address": "0x04C89607413713Ec9775E14b954286519d836FEf",
      "txHash": "0xef30970600be569300ffd92951db83bea97e74ac1f81e09f40dd603b9774bb05",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:35"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:24"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:33"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:39"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:418"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)43_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:63"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:219"
          },
          {
            "contract": "KaoMoji",
            "label": "_tokenData",
            "type": "t_mapping(t_uint256,t_bytes_storage)",
            "src": "contracts/KaoMoji.sol:30"
          },
          {
            "contract": "KaoMoji",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "contracts/KaoMoji.sol:31"
          },
          {
            "contract": "KaoMoji",
            "label": "_auctionHouse",
            "type": "t_contract(IAuctionHouse)14073",
            "src": "contracts/KaoMoji.sol:32"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoToken",
            "type": "t_contract(KaoToken)12729",
            "src": "contracts/KaoMoji.sol:33"
          },
          {
            "contract": "KaoMoji",
            "label": "_kaoStaking",
            "type": "t_contract(KaoStaking)12552",
            "src": "contracts/KaoMoji.sol:34"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bytes_storage)": {
            "label": "mapping(uint256 => bytes)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_contract(IAuctionHouse)14073": {
            "label": "contract IAuctionHouse"
          },
          "t_contract(KaoToken)12729": {
            "label": "contract KaoToken"
          },
          "t_contract(KaoStaking)12552": {
            "label": "contract KaoStaking"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)43_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)43_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          }
        }
      }
    }
  }
}
